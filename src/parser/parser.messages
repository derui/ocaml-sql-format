entries: Tok_unsigned_integer
##
## Ends in an error in state: 0.
##
## entries' -> . entries [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_unsigned_integer
##
## Ends in an error in state: 1.
##
## query_expression -> Kw_with . separated_nonempty_list(Tok_comma,with_list_element) query_expression_body [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_with
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Kw_as Tok_lparen Kw_select Tok_ident Tok_rparen Tok_unsigned_integer
##
## Ends in an error in state: 3.
##
## separated_nonempty_list(Tok_comma,with_list_element) -> with_list_element . [ Kw_select ]
## separated_nonempty_list(Tok_comma,with_list_element) -> with_list_element . Tok_comma separated_nonempty_list(Tok_comma,with_list_element) [ Kw_select ]
##
## The known suffix of the stack is as follows:
## with_list_element
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Kw_as Tok_lparen Kw_select Tok_ident Tok_rparen Tok_comma Tok_unsigned_integer
##
## Ends in an error in state: 4.
##
## separated_nonempty_list(Tok_comma,with_list_element) -> with_list_element Tok_comma . separated_nonempty_list(Tok_comma,with_list_element) [ Kw_select ]
##
## The known suffix of the stack is as follows:
## with_list_element Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 6.
##
## with_list_element -> identifier . option(column_list) Kw_as Tok_lparen query_expression Tok_rparen [ Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Tok_lparen Tok_unsigned_integer
##
## Ends in an error in state: 7.
##
## column_list -> Tok_lparen . separated_nonempty_list(Tok_comma,identifier) Tok_rparen [ Kw_as ]
##
## The known suffix of the stack is as follows:
## Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Tok_lparen Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 10.
##
## separated_nonempty_list(Tok_comma,identifier) -> identifier . [ Tok_rparen ]
## separated_nonempty_list(Tok_comma,identifier) -> identifier . Tok_comma separated_nonempty_list(Tok_comma,identifier) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Tok_lparen Tok_ident Tok_comma Tok_unsigned_integer
##
## Ends in an error in state: 11.
##
## separated_nonempty_list(Tok_comma,identifier) -> identifier Tok_comma . separated_nonempty_list(Tok_comma,identifier) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## identifier Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Tok_lparen Tok_ident Tok_rparen Tok_unsigned_integer
##
## Ends in an error in state: 13.
##
## with_list_element -> identifier option(column_list) . Kw_as Tok_lparen query_expression Tok_rparen [ Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier option(column_list)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 14.
##
## with_list_element -> identifier option(column_list) Kw_as . Tok_lparen query_expression Tok_rparen [ Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier option(column_list) Kw_as
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Kw_as Tok_lparen Tok_unsigned_integer
##
## Ends in an error in state: 15.
##
## with_list_element -> identifier option(column_list) Kw_as Tok_lparen . query_expression Tok_rparen [ Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier option(column_list) Kw_as Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_semicolon
##
## Ends in an error in state: 16.
##
## select_clause -> Kw_select . select_list [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
## select_clause -> Kw_select . Kw_all select_list [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
## select_clause -> Kw_select . Kw_distinct select_list [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_select
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_distinct Tok_semicolon
##
## Ends in an error in state: 20.
##
## select_clause -> Kw_select Kw_distinct . select_list [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_select Kw_distinct
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_all_in_group Tok_unsigned_integer
##
## Ends in an error in state: 24.
##
## separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist . [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
## separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist . Tok_comma separated_nonempty_list(Tok_comma,select_sublist) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## select_sublist
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_comma Tok_semicolon
##
## Ends in an error in state: 25.
##
## separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist Tok_comma . separated_nonempty_list(Tok_comma,select_sublist) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## select_sublist Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_not Tok_semicolon
##
## Ends in an error in state: 27.
##
## boolean_factor -> option(Kw_not) . boolean_primary [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## option(Kw_not)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_lparen Tok_semicolon
##
## Ends in an error in state: 31.
##
## nested_expression -> Tok_lparen . separated_nonempty_list(Tok_comma,expression) option(Tok_comma) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## subquery -> Tok_lparen . query_expression Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 32.
##
## nested_expression -> Tok_lparen separated_nonempty_list(Tok_comma,expression) . option(Tok_comma) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lparen separated_nonempty_list(Tok_comma,expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 264, spurious reduction of production separated_nonempty_list(Tok_comma,expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Op_star Tok_unsigned_integer
##
## Ends in an error in state: 36.
##
## query -> select_clause . option(into_clause) option(sub_select_clause) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## select_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_into Tok_unsigned_integer
##
## Ends in an error in state: 37.
##
## into_clause -> Kw_into . identifier [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_into
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_into Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 39.
##
## query -> select_clause option(into_clause) . option(sub_select_clause) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## select_clause option(into_clause)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_unsigned_integer
##
## Ends in an error in state: 40.
##
## from_clause -> Kw_from . separated_nonempty_list(Tok_comma,table_reference) [ Tok_semicolon Tok_rparen Tok_eof Kw_where Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_group Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_from
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_lparen Tok_unsigned_integer
##
## Ends in an error in state: 41.
##
## table_primary -> Tok_lparen . joined_table Tok_rparen [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
## table_subquery -> Tok_lparen . query_expression Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_table Tok_unsigned_integer
##
## Ends in an error in state: 42.
##
## table_subquery -> Kw_table . Tok_lparen query_expression Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_table Tok_lparen Tok_unsigned_integer
##
## Ends in an error in state: 43.
##
## table_subquery -> Kw_table Tok_lparen . query_expression Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_table Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_union Tok_unsigned_integer
##
## Ends in an error in state: 45.
##
## sub_query_expression_body -> Kw_union . Kw_all query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
## sub_query_expression_body -> Kw_union . Kw_distinct query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
## sub_query_expression_body -> Kw_union . query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_union
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_union Kw_distinct Tok_unsigned_integer
##
## Ends in an error in state: 46.
##
## sub_query_expression_body -> Kw_union Kw_distinct . query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_union Kw_distinct
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_having Tok_ident Tok_ident
##
## Ends in an error in state: 48.
##
## query_term -> query_primary . list(sub_query_term) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## query_primary
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 270, spurious reduction of production having_clause -> Kw_having condition
## In state 272, spurious reduction of production option(having_clause) -> having_clause
## In state 271, spurious reduction of production sub_select_clause -> from_clause option(where_clause) option(group_by_clause) option(having_clause)
## In state 251, spurious reduction of production option(sub_select_clause) -> sub_select_clause
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_intersect Tok_unsigned_integer
##
## Ends in an error in state: 49.
##
## sub_query_term -> Kw_intersect . query_primary [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
## sub_query_term -> Kw_intersect . Kw_all query_primary [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
## sub_query_term -> Kw_intersect . Kw_distinct query_primary [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_intersect
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_intersect Kw_distinct Tok_unsigned_integer
##
## Ends in an error in state: 50.
##
## sub_query_term -> Kw_intersect Kw_distinct . query_primary [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_intersect Kw_distinct
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_intersect Kw_all Tok_unsigned_integer
##
## Ends in an error in state: 53.
##
## sub_query_term -> Kw_intersect Kw_all . query_primary [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_intersect Kw_all
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_intersect Kw_select Tok_ident Kw_from Tok_ident Kw_having Tok_ident Tok_ident
##
## Ends in an error in state: 56.
##
## list(sub_query_term) -> sub_query_term . list(sub_query_term) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## sub_query_term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 270, spurious reduction of production having_clause -> Kw_having condition
## In state 272, spurious reduction of production option(having_clause) -> having_clause
## In state 271, spurious reduction of production sub_select_clause -> from_clause option(where_clause) option(group_by_clause) option(having_clause)
## In state 251, spurious reduction of production option(sub_select_clause) -> sub_select_clause
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
## In state 55, spurious reduction of production sub_query_term -> Kw_intersect query_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_union Kw_all Tok_unsigned_integer
##
## Ends in an error in state: 59.
##
## sub_query_expression_body -> Kw_union Kw_all . query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_union Kw_all
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_except Tok_unsigned_integer
##
## Ends in an error in state: 62.
##
## sub_query_expression_body -> Kw_except . Kw_all query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
## sub_query_expression_body -> Kw_except . Kw_distinct query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
## sub_query_expression_body -> Kw_except . query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_except
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_except Kw_distinct Tok_unsigned_integer
##
## Ends in an error in state: 63.
##
## sub_query_expression_body -> Kw_except Kw_distinct . query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_except Kw_distinct
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_except Kw_all Tok_unsigned_integer
##
## Ends in an error in state: 65.
##
## sub_query_expression_body -> Kw_except Kw_all . query_term [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_except Kw_all
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_order Tok_unsigned_integer
##
## Ends in an error in state: 71.
##
## order_by_clause -> Kw_order . Kw_by separated_nonempty_list(Tok_comma,sort_specification) [ Tok_semicolon Tok_rparen Tok_eof Kw_offset Kw_limit Kw_fetch ]
##
## The known suffix of the stack is as follows:
## Kw_order
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_order Kw_by Tok_semicolon
##
## Ends in an error in state: 72.
##
## order_by_clause -> Kw_order Kw_by . separated_nonempty_list(Tok_comma,sort_specification) [ Tok_semicolon Tok_rparen Tok_eof Kw_offset Kw_limit Kw_fetch ]
##
## The known suffix of the stack is as follows:
## Kw_order Kw_by
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_order Kw_by Tok_ident Kw_null Kw_first Tok_unsigned_integer
##
## Ends in an error in state: 73.
##
## separated_nonempty_list(Tok_comma,sort_specification) -> sort_specification . [ Tok_semicolon Tok_rparen Tok_eof Kw_offset Kw_limit Kw_fetch ]
## separated_nonempty_list(Tok_comma,sort_specification) -> sort_specification . Tok_comma separated_nonempty_list(Tok_comma,sort_specification) [ Tok_semicolon Tok_rparen Tok_eof Kw_offset Kw_limit Kw_fetch ]
##
## The known suffix of the stack is as follows:
## sort_specification
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_order Kw_by Tok_ident Tok_comma Tok_semicolon
##
## Ends in an error in state: 74.
##
## separated_nonempty_list(Tok_comma,sort_specification) -> sort_specification Tok_comma . separated_nonempty_list(Tok_comma,sort_specification) [ Tok_semicolon Tok_rparen Tok_eof Kw_offset Kw_limit Kw_fetch ]
##
## The known suffix of the stack is as follows:
## sort_specification Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_order Kw_by Tok_ident Tok_ident
##
## Ends in an error in state: 75.
##
## sort_specification -> sort_key . option(sort_specification_order) option(sort_specification_null) [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_offset Kw_limit Kw_fetch ]
##
## The known suffix of the stack is as follows:
## sort_key
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 86, spurious reduction of production sort_key -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_order Kw_by Tok_ident Kw_asc Tok_unsigned_integer
##
## Ends in an error in state: 79.
##
## sort_specification -> sort_key option(sort_specification_order) . option(sort_specification_null) [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_offset Kw_limit Kw_fetch ]
##
## The known suffix of the stack is as follows:
## sort_key option(sort_specification_order)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_order Kw_by Tok_ident Kw_null Tok_unsigned_integer
##
## Ends in an error in state: 80.
##
## sort_specification_null -> Kw_null . Kw_first [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_offset Kw_limit Kw_fetch ]
## sort_specification_null -> Kw_null . Kw_last [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_offset Kw_limit Kw_fetch ]
##
## The known suffix of the stack is as follows:
## Kw_null
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_or Tok_semicolon
##
## Ends in an error in state: 90.
##
## separated_nonempty_list(Kw_or,boolean_term) -> boolean_term Kw_or . separated_nonempty_list(Kw_or,boolean_term) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as ]
##
## The known suffix of the stack is as follows:
## boolean_term Kw_or
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_is Kw_null Tok_unsigned_integer
##
## Ends in an error in state: 92.
##
## separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor . [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as ]
## separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor . Kw_and separated_nonempty_list(Kw_and,boolean_factor) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as ]
##
## The known suffix of the stack is as follows:
## boolean_factor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_and Tok_semicolon
##
## Ends in an error in state: 93.
##
## separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor Kw_and . separated_nonempty_list(Kw_and,boolean_factor) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as ]
##
## The known suffix of the stack is as follows:
## boolean_factor Kw_and
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_offset Tok_typed_string
##
## Ends in an error in state: 98.
##
## limit_clause -> Kw_offset . integer_parameter row option(fetch_clause) [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_offset
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_dollar Tok_typed_string
##
## Ends in an error in state: 100.
##
## unsigned_value_expression_primary -> Tok_dollar . Tok_unsigned_integer [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_dollar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_unsigned_integer
##
## Ends in an error in state: 102.
##
## text_aggregate_function -> Kw_textagg . Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg . Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg . Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_semicolon
##
## Ends in an error in state: 103.
##
## text_aggregate_function -> Kw_textagg Tok_lparen . option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg Tok_lparen . option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg Tok_lparen . option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Kw_for Tok_semicolon
##
## Ends in an error in state: 105.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) . separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) . separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) . separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_delimiter Tok_unsigned_integer
##
## Ends in an error in state: 107.
##
## option(pair(Kw_delimiter,character)) -> Kw_delimiter . character [ Tok_rparen Kw_quote Kw_order Kw_no Kw_header Kw_encoding ]
##
## The known suffix of the stack is as follows:
## Kw_delimiter
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_delimiter Tok_string Tok_unsigned_integer
##
## Ends in an error in state: 110.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) . option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) . Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) . Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_quote Tok_unsigned_integer
##
## Ends in an error in state: 111.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote . character option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_quote Tok_string Tok_unsigned_integer
##
## Ends in an error in state: 112.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character . option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_quote Tok_string Kw_header Tok_unsigned_integer
##
## Ends in an error in state: 114.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) . option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_encoding Tok_unsigned_integer
##
## Ends in an error in state: 115.
##
## option(pair(Kw_encoding,identifier)) -> Kw_encoding . identifier [ Tok_rparen Kw_order ]
##
## The known suffix of the stack is as follows:
## Kw_encoding
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_quote Tok_string Kw_encoding Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 117.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier)) . option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_quote Tok_string Kw_order Kw_by Tok_ident Tok_semicolon
##
## Ends in an error in state: 118.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) . Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_quote character option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 86, spurious reduction of production sort_key -> expression
## In state 75, spurious reduction of production option(sort_specification_order) ->
## In state 79, spurious reduction of production option(sort_specification_null) ->
## In state 84, spurious reduction of production sort_specification -> sort_key option(sort_specification_order) option(sort_specification_null)
## In state 73, spurious reduction of production separated_nonempty_list(Tok_comma,sort_specification) -> sort_specification
## In state 95, spurious reduction of production order_by_clause -> Kw_order Kw_by separated_nonempty_list(Tok_comma,sort_specification)
## In state 96, spurious reduction of production option(order_by_clause) -> order_by_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_no Tok_unsigned_integer
##
## Ends in an error in state: 120.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no . Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_no Kw_quote Tok_unsigned_integer
##
## Ends in an error in state: 121.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote . option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_no Kw_quote Kw_header Tok_unsigned_integer
##
## Ends in an error in state: 122.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) . option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_no Kw_quote Kw_encoding Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 123.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) . option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_no Kw_quote Kw_order Kw_by Tok_ident Tok_semicolon
##
## Ends in an error in state: 124.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) . Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) Kw_no Kw_quote option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 86, spurious reduction of production sort_key -> expression
## In state 75, spurious reduction of production option(sort_specification_order) ->
## In state 79, spurious reduction of production option(sort_specification_null) ->
## In state 84, spurious reduction of production sort_specification -> sort_key option(sort_specification_order) option(sort_specification_null)
## In state 73, spurious reduction of production separated_nonempty_list(Tok_comma,sort_specification) -> sort_specification
## In state 95, spurious reduction of production order_by_clause -> Kw_order Kw_by separated_nonempty_list(Tok_comma,sort_specification)
## In state 96, spurious reduction of production option(order_by_clause) -> order_by_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_header Tok_unsigned_integer
##
## Ends in an error in state: 126.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) . option(pair(Kw_encoding,identifier)) option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_encoding Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 127.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) option(pair(Kw_encoding,identifier)) . option(order_by_clause) Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) option(pair(Kw_encoding,identifier))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_order Kw_by Tok_ident Tok_semicolon
##
## Ends in an error in state: 128.
##
## text_aggregate_function -> Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause) . Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_textagg Tok_lparen option(Kw_for) separated_nonempty_list(Tok_comma,derived_column) option(pair(Kw_delimiter,character)) option(Kw_header) option(pair(Kw_encoding,identifier)) option(order_by_clause)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 86, spurious reduction of production sort_key -> expression
## In state 75, spurious reduction of production option(sort_specification_order) ->
## In state 79, spurious reduction of production option(sort_specification_null) ->
## In state 84, spurious reduction of production sort_specification -> sort_key option(sort_specification_order) option(sort_specification_null)
## In state 73, spurious reduction of production separated_nonempty_list(Tok_comma,sort_specification) -> sort_specification
## In state 95, spurious reduction of production order_by_clause -> Kw_order Kw_by separated_nonempty_list(Tok_comma,sort_specification)
## In state 96, spurious reduction of production option(order_by_clause) -> order_by_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 130.
##
## derived_column -> expression . option(pair(Kw_as,identifier)) [ Tok_rparen Tok_comma Kw_quote Kw_order Kw_no Kw_header Kw_encoding Kw_delimiter ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 131.
##
## option(pair(Kw_as,identifier)) -> Kw_as . identifier [ Tok_rparen Tok_comma Kw_quote Kw_order Kw_no Kw_header Kw_encoding Kw_delimiter ]
##
## The known suffix of the stack is as follows:
## Kw_as
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Kw_as Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 134.
##
## separated_nonempty_list(Tok_comma,derived_column) -> derived_column . [ Tok_rparen Kw_quote Kw_order Kw_no Kw_header Kw_encoding Kw_delimiter ]
## separated_nonempty_list(Tok_comma,derived_column) -> derived_column . Tok_comma separated_nonempty_list(Tok_comma,derived_column) [ Tok_rparen Kw_quote Kw_order Kw_no Kw_header Kw_encoding Kw_delimiter ]
##
## The known suffix of the stack is as follows:
## derived_column
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_textagg Tok_lparen Tok_ident Tok_comma Tok_semicolon
##
## Ends in an error in state: 135.
##
## separated_nonempty_list(Tok_comma,derived_column) -> derived_column Tok_comma . separated_nonempty_list(Tok_comma,derived_column) [ Tok_rparen Kw_quote Kw_order Kw_no Kw_header Kw_encoding Kw_delimiter ]
##
## The known suffix of the stack is as follows:
## derived_column Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Tok_semicolon
##
## Ends in an error in state: 137.
##
## case_expression -> Kw_case . expression nonempty_list(sub_case_expression) option(pair(Kw_else,expression)) Kw_end [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
## searched_case_expression -> Kw_case . nonempty_list(sub_case_expression) option(pair(Kw_else,expression)) Kw_end [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_case
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Kw_when Tok_semicolon
##
## Ends in an error in state: 138.
##
## sub_case_expression -> Kw_when . expression Kw_then expression [ Kw_when Kw_end Kw_else ]
##
## The known suffix of the stack is as follows:
## Kw_when
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Kw_when Tok_ident Tok_semicolon
##
## Ends in an error in state: 139.
##
## sub_case_expression -> Kw_when expression . Kw_then expression [ Kw_when Kw_end Kw_else ]
##
## The known suffix of the stack is as follows:
## Kw_when expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Kw_when Tok_ident Kw_then Tok_semicolon
##
## Ends in an error in state: 140.
##
## sub_case_expression -> Kw_when expression Kw_then . expression [ Kw_when Kw_end Kw_else ]
##
## The known suffix of the stack is as follows:
## Kw_when expression Kw_then
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Kw_when Tok_ident Kw_then Tok_ident Tok_semicolon
##
## Ends in an error in state: 142.
##
## nonempty_list(sub_case_expression) -> sub_case_expression . [ Kw_end Kw_else ]
## nonempty_list(sub_case_expression) -> sub_case_expression . nonempty_list(sub_case_expression) [ Kw_end Kw_else ]
##
## The known suffix of the stack is as follows:
## sub_case_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 141, spurious reduction of production sub_case_expression -> Kw_when expression Kw_then expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Kw_when Tok_ident Kw_then Tok_ident Kw_else Tok_semicolon
##
## Ends in an error in state: 145.
##
## option(pair(Kw_else,expression)) -> Kw_else . expression [ Kw_end ]
##
## The known suffix of the stack is as follows:
## Kw_else
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Kw_when Tok_ident Kw_then Tok_ident Kw_else Tok_ident Tok_semicolon
##
## Ends in an error in state: 147.
##
## searched_case_expression -> Kw_case nonempty_list(sub_case_expression) option(pair(Kw_else,expression)) . Kw_end [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_case nonempty_list(sub_case_expression) option(pair(Kw_else,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 146, spurious reduction of production option(pair(Kw_else,expression)) -> Kw_else expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Tok_ident Tok_semicolon
##
## Ends in an error in state: 149.
##
## case_expression -> Kw_case expression . nonempty_list(sub_case_expression) option(pair(Kw_else,expression)) Kw_end [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_case expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_case Tok_ident Kw_when Tok_ident Kw_then Tok_ident Kw_else Tok_ident Tok_semicolon
##
## Ends in an error in state: 151.
##
## case_expression -> Kw_case expression nonempty_list(sub_case_expression) option(pair(Kw_else,expression)) . Kw_end [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_case expression nonempty_list(sub_case_expression) option(pair(Kw_else,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 146, spurious reduction of production option(pair(Kw_else,expression)) -> Kw_else expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_offset Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 158.
##
## limit_clause -> Kw_offset integer_parameter . row option(fetch_clause) [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_offset integer_parameter
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_offset Tok_ident Kw_row Tok_unsigned_integer
##
## Ends in an error in state: 161.
##
## limit_clause -> Kw_offset integer_parameter row . option(fetch_clause) [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_offset integer_parameter row
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_fetch Tok_unsigned_integer
##
## Ends in an error in state: 162.
##
## fetch_clause -> Kw_fetch . Kw_first option(integer_parameter) row Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
## fetch_clause -> Kw_fetch . Kw_next option(integer_parameter) row Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_fetch
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_fetch Kw_next Tok_typed_string
##
## Ends in an error in state: 163.
##
## fetch_clause -> Kw_fetch Kw_next . option(integer_parameter) row Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_fetch Kw_next
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_fetch Kw_next Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 164.
##
## fetch_clause -> Kw_fetch Kw_next option(integer_parameter) . row Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_fetch Kw_next option(integer_parameter)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_fetch Kw_next Kw_row Tok_unsigned_integer
##
## Ends in an error in state: 165.
##
## fetch_clause -> Kw_fetch Kw_next option(integer_parameter) row . Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_fetch Kw_next option(integer_parameter) row
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_fetch Kw_first Tok_typed_string
##
## Ends in an error in state: 170.
##
## fetch_clause -> Kw_fetch Kw_first . option(integer_parameter) row Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_fetch Kw_first
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_fetch Kw_first Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 171.
##
## fetch_clause -> Kw_fetch Kw_first option(integer_parameter) . row Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_fetch Kw_first option(integer_parameter)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_fetch Kw_first Kw_row Tok_unsigned_integer
##
## Ends in an error in state: 172.
##
## fetch_clause -> Kw_fetch Kw_first option(integer_parameter) row . Kw_only [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_fetch Kw_first option(integer_parameter) row
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_limit Tok_typed_string
##
## Ends in an error in state: 176.
##
## limit_clause -> Kw_limit . integer_parameter [ Tok_semicolon Tok_rparen Tok_eof ]
## limit_clause -> Kw_limit . integer_parameter Tok_comma integer_parameter [ Tok_semicolon Tok_rparen Tok_eof ]
## limit_clause -> Kw_limit . integer_parameter Kw_offset integer_parameter [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_limit
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_limit Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 177.
##
## limit_clause -> Kw_limit integer_parameter . [ Tok_semicolon Tok_rparen Tok_eof ]
## limit_clause -> Kw_limit integer_parameter . Tok_comma integer_parameter [ Tok_semicolon Tok_rparen Tok_eof ]
## limit_clause -> Kw_limit integer_parameter . Kw_offset integer_parameter [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_limit integer_parameter
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_limit Tok_ident Tok_comma Tok_typed_string
##
## Ends in an error in state: 178.
##
## limit_clause -> Kw_limit integer_parameter Tok_comma . integer_parameter [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_limit integer_parameter Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_limit Tok_ident Kw_offset Tok_typed_string
##
## Ends in an error in state: 180.
##
## limit_clause -> Kw_limit integer_parameter Kw_offset . integer_parameter [ Tok_semicolon Tok_rparen Tok_eof ]
##
## The known suffix of the stack is as follows:
## Kw_limit integer_parameter Kw_offset
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_table Tok_lparen Kw_select Tok_ident Tok_semicolon
##
## Ends in an error in state: 186.
##
## table_subquery -> Kw_table Tok_lparen query_expression . Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_table Tok_lparen query_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 417, spurious reduction of production option(pair(option(Kw_as),identifier)) ->
## In state 418, spurious reduction of production select_sublist -> expression option(pair(option(Kw_as),identifier))
## In state 24, spurious reduction of production separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist
## In state 21, spurious reduction of production select_list -> separated_nonempty_list(Tok_comma,select_sublist)
## In state 424, spurious reduction of production select_clause -> Kw_select select_list
## In state 36, spurious reduction of production option(into_clause) ->
## In state 39, spurious reduction of production option(sub_select_clause) ->
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
## In state 48, spurious reduction of production list(sub_query_term) ->
## In state 58, spurious reduction of production query_term -> query_primary list(sub_query_term)
## In state 44, spurious reduction of production list(sub_query_expression_body) ->
## In state 70, spurious reduction of production option(order_by_clause) ->
## In state 97, spurious reduction of production option(limit_clause) ->
## In state 182, spurious reduction of production query_expression_body -> query_term list(sub_query_expression_body) option(order_by_clause) option(limit_clause)
## In state 185, spurious reduction of production query_expression -> query_expression_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_table Tok_lparen Kw_select Tok_ident Tok_rparen Tok_unsigned_integer
##
## Ends in an error in state: 187.
##
## table_subquery -> Kw_table Tok_lparen query_expression Tok_rparen . option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_table Tok_lparen query_expression Tok_rparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_table Tok_lparen Kw_select Tok_ident Tok_rparen Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 189.
##
## table_subquery -> Kw_table Tok_lparen query_expression Tok_rparen option(Kw_as) . identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_table Tok_lparen query_expression Tok_rparen option(Kw_as)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_lateral Tok_unsigned_integer
##
## Ends in an error in state: 191.
##
## table_subquery -> Kw_lateral . Tok_lparen query_expression Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_lateral
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_lateral Tok_lparen Tok_unsigned_integer
##
## Ends in an error in state: 192.
##
## table_subquery -> Kw_lateral Tok_lparen . query_expression Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_lateral Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_lateral Tok_lparen Kw_select Tok_ident Tok_semicolon
##
## Ends in an error in state: 193.
##
## table_subquery -> Kw_lateral Tok_lparen query_expression . Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_lateral Tok_lparen query_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 417, spurious reduction of production option(pair(option(Kw_as),identifier)) ->
## In state 418, spurious reduction of production select_sublist -> expression option(pair(option(Kw_as),identifier))
## In state 24, spurious reduction of production separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist
## In state 21, spurious reduction of production select_list -> separated_nonempty_list(Tok_comma,select_sublist)
## In state 424, spurious reduction of production select_clause -> Kw_select select_list
## In state 36, spurious reduction of production option(into_clause) ->
## In state 39, spurious reduction of production option(sub_select_clause) ->
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
## In state 48, spurious reduction of production list(sub_query_term) ->
## In state 58, spurious reduction of production query_term -> query_primary list(sub_query_term)
## In state 44, spurious reduction of production list(sub_query_expression_body) ->
## In state 70, spurious reduction of production option(order_by_clause) ->
## In state 97, spurious reduction of production option(limit_clause) ->
## In state 182, spurious reduction of production query_expression_body -> query_term list(sub_query_expression_body) option(order_by_clause) option(limit_clause)
## In state 185, spurious reduction of production query_expression -> query_expression_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_lateral Tok_lparen Kw_select Tok_ident Tok_rparen Tok_unsigned_integer
##
## Ends in an error in state: 194.
##
## table_subquery -> Kw_lateral Tok_lparen query_expression Tok_rparen . option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_lateral Tok_lparen query_expression Tok_rparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Kw_lateral Tok_lparen Kw_select Tok_ident Tok_rparen Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 195.
##
## table_subquery -> Kw_lateral Tok_lparen query_expression Tok_rparen option(Kw_as) . identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_lateral Tok_lparen query_expression Tok_rparen option(Kw_as)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 198.
##
## joined_table -> table_primary . list(sub_joined_table) [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_order Kw_on Kw_offset Kw_limit Kw_intersect Kw_having Kw_group Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## table_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_union Tok_unsigned_integer
##
## Ends in an error in state: 199.
##
## sub_joined_table -> Kw_union . Kw_join table_primary [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_union
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_union Kw_join Tok_unsigned_integer
##
## Ends in an error in state: 200.
##
## sub_joined_table -> Kw_union Kw_join . table_primary [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_union Kw_join
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 203.
##
## table_name -> identifier . option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
## table_name -> identifier . [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 204.
##
## table_name -> identifier option(Kw_as) . identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## identifier option(Kw_as)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_right Tok_unsigned_integer
##
## Ends in an error in state: 206.
##
## sub_joined_table -> Kw_right . option(Kw_outer) Kw_join table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_right Kw_outer Tok_unsigned_integer
##
## Ends in an error in state: 208.
##
## sub_joined_table -> Kw_right option(Kw_outer) . Kw_join table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_right option(Kw_outer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_right Kw_join Tok_unsigned_integer
##
## Ends in an error in state: 209.
##
## sub_joined_table -> Kw_right option(Kw_outer) Kw_join . table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_right option(Kw_outer) Kw_join
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_right Kw_join Tok_ident Tok_semicolon
##
## Ends in an error in state: 210.
##
## sub_joined_table -> Kw_right option(Kw_outer) Kw_join table_reference . Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_right option(Kw_outer) Kw_join table_reference
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production table_name -> identifier
## In state 202, spurious reduction of production table_primary -> table_name
## In state 198, spurious reduction of production list(sub_joined_table) ->
## In state 240, spurious reduction of production joined_table -> table_primary list(sub_joined_table)
## In state 213, spurious reduction of production table_reference -> joined_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_right Kw_join Tok_ident Kw_on Tok_semicolon
##
## Ends in an error in state: 211.
##
## sub_joined_table -> Kw_right option(Kw_outer) Kw_join table_reference Kw_on . condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_right option(Kw_outer) Kw_join table_reference Kw_on
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_left Tok_unsigned_integer
##
## Ends in an error in state: 214.
##
## sub_joined_table -> Kw_left . option(Kw_outer) Kw_join table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_left
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_left Kw_outer Tok_unsigned_integer
##
## Ends in an error in state: 215.
##
## sub_joined_table -> Kw_left option(Kw_outer) . Kw_join table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_left option(Kw_outer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_left Kw_join Tok_unsigned_integer
##
## Ends in an error in state: 216.
##
## sub_joined_table -> Kw_left option(Kw_outer) Kw_join . table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_left option(Kw_outer) Kw_join
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_left Kw_join Tok_ident Tok_semicolon
##
## Ends in an error in state: 217.
##
## sub_joined_table -> Kw_left option(Kw_outer) Kw_join table_reference . Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_left option(Kw_outer) Kw_join table_reference
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production table_name -> identifier
## In state 202, spurious reduction of production table_primary -> table_name
## In state 198, spurious reduction of production list(sub_joined_table) ->
## In state 240, spurious reduction of production joined_table -> table_primary list(sub_joined_table)
## In state 213, spurious reduction of production table_reference -> joined_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_left Kw_join Tok_ident Kw_on Tok_semicolon
##
## Ends in an error in state: 218.
##
## sub_joined_table -> Kw_left option(Kw_outer) Kw_join table_reference Kw_on . condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_left option(Kw_outer) Kw_join table_reference Kw_on
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_join Tok_unsigned_integer
##
## Ends in an error in state: 220.
##
## sub_joined_table -> Kw_join . table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_join
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_join Tok_ident Tok_semicolon
##
## Ends in an error in state: 221.
##
## sub_joined_table -> Kw_join table_reference . Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_join table_reference
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production table_name -> identifier
## In state 202, spurious reduction of production table_primary -> table_name
## In state 198, spurious reduction of production list(sub_joined_table) ->
## In state 240, spurious reduction of production joined_table -> table_primary list(sub_joined_table)
## In state 213, spurious reduction of production table_reference -> joined_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_join Tok_ident Kw_on Tok_semicolon
##
## Ends in an error in state: 222.
##
## sub_joined_table -> Kw_join table_reference Kw_on . condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_join table_reference Kw_on
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_inner Tok_unsigned_integer
##
## Ends in an error in state: 224.
##
## sub_joined_table -> Kw_inner . Kw_join table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_inner
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_inner Kw_join Tok_unsigned_integer
##
## Ends in an error in state: 225.
##
## sub_joined_table -> Kw_inner Kw_join . table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_inner Kw_join
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_inner Kw_join Tok_ident Tok_semicolon
##
## Ends in an error in state: 226.
##
## sub_joined_table -> Kw_inner Kw_join table_reference . Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_inner Kw_join table_reference
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production table_name -> identifier
## In state 202, spurious reduction of production table_primary -> table_name
## In state 198, spurious reduction of production list(sub_joined_table) ->
## In state 240, spurious reduction of production joined_table -> table_primary list(sub_joined_table)
## In state 213, spurious reduction of production table_reference -> joined_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_inner Kw_join Tok_ident Kw_on Tok_semicolon
##
## Ends in an error in state: 227.
##
## sub_joined_table -> Kw_inner Kw_join table_reference Kw_on . condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_inner Kw_join table_reference Kw_on
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_full Tok_unsigned_integer
##
## Ends in an error in state: 229.
##
## sub_joined_table -> Kw_full . option(Kw_outer) Kw_join table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_full
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_full Kw_outer Tok_unsigned_integer
##
## Ends in an error in state: 230.
##
## sub_joined_table -> Kw_full option(Kw_outer) . Kw_join table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_full option(Kw_outer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_full Kw_join Tok_unsigned_integer
##
## Ends in an error in state: 231.
##
## sub_joined_table -> Kw_full option(Kw_outer) Kw_join . table_reference Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_full option(Kw_outer) Kw_join
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_full Kw_join Tok_ident Tok_semicolon
##
## Ends in an error in state: 232.
##
## sub_joined_table -> Kw_full option(Kw_outer) Kw_join table_reference . Kw_on condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_full option(Kw_outer) Kw_join table_reference
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production table_name -> identifier
## In state 202, spurious reduction of production table_primary -> table_name
## In state 198, spurious reduction of production list(sub_joined_table) ->
## In state 240, spurious reduction of production joined_table -> table_primary list(sub_joined_table)
## In state 213, spurious reduction of production table_reference -> joined_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_full Kw_join Tok_ident Kw_on Tok_semicolon
##
## Ends in an error in state: 233.
##
## sub_joined_table -> Kw_full option(Kw_outer) Kw_join table_reference Kw_on . condition [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_full option(Kw_outer) Kw_join table_reference Kw_on
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_cross Tok_unsigned_integer
##
## Ends in an error in state: 235.
##
## sub_joined_table -> Kw_cross . Kw_join table_primary [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_cross
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_cross Kw_join Tok_unsigned_integer
##
## Ends in an error in state: 236.
##
## sub_joined_table -> Kw_cross Kw_join . table_primary [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Kw_cross Kw_join
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_cross Kw_join Tok_ident Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 238.
##
## list(sub_joined_table) -> sub_joined_table . list(sub_joined_table) [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_order Kw_on Kw_offset Kw_limit Kw_intersect Kw_having Kw_group Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## sub_joined_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_lparen Kw_select Tok_ident Tok_semicolon
##
## Ends in an error in state: 241.
##
## table_subquery -> Tok_lparen query_expression . Tok_rparen option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Tok_lparen query_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 417, spurious reduction of production option(pair(option(Kw_as),identifier)) ->
## In state 418, spurious reduction of production select_sublist -> expression option(pair(option(Kw_as),identifier))
## In state 24, spurious reduction of production separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist
## In state 21, spurious reduction of production select_list -> separated_nonempty_list(Tok_comma,select_sublist)
## In state 424, spurious reduction of production select_clause -> Kw_select select_list
## In state 36, spurious reduction of production option(into_clause) ->
## In state 39, spurious reduction of production option(sub_select_clause) ->
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
## In state 48, spurious reduction of production list(sub_query_term) ->
## In state 58, spurious reduction of production query_term -> query_primary list(sub_query_term)
## In state 44, spurious reduction of production list(sub_query_expression_body) ->
## In state 70, spurious reduction of production option(order_by_clause) ->
## In state 97, spurious reduction of production option(limit_clause) ->
## In state 182, spurious reduction of production query_expression_body -> query_term list(sub_query_expression_body) option(order_by_clause) option(limit_clause)
## In state 185, spurious reduction of production query_expression -> query_expression_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_lparen Kw_select Tok_ident Tok_rparen Tok_unsigned_integer
##
## Ends in an error in state: 242.
##
## table_subquery -> Tok_lparen query_expression Tok_rparen . option(Kw_as) identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Tok_lparen query_expression Tok_rparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_lparen Kw_select Tok_ident Tok_rparen Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 243.
##
## table_subquery -> Tok_lparen query_expression Tok_rparen option(Kw_as) . identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Tok_lparen query_expression Tok_rparen option(Kw_as)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 245.
##
## table_primary -> Tok_lparen joined_table . Tok_rparen [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_where Kw_union Kw_right Kw_order Kw_on Kw_offset Kw_limit Kw_left Kw_join Kw_intersect Kw_inner Kw_having Kw_group Kw_full Kw_fetch Kw_except Kw_cross ]
##
## The known suffix of the stack is as follows:
## Tok_lparen joined_table
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production table_name -> identifier
## In state 202, spurious reduction of production table_primary -> table_name
## In state 198, spurious reduction of production list(sub_joined_table) ->
## In state 240, spurious reduction of production joined_table -> table_primary list(sub_joined_table)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_on
##
## Ends in an error in state: 247.
##
## separated_nonempty_list(Tok_comma,table_reference) -> table_reference . [ Tok_semicolon Tok_rparen Tok_eof Kw_where Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_group Kw_fetch Kw_except ]
## separated_nonempty_list(Tok_comma,table_reference) -> table_reference . Tok_comma separated_nonempty_list(Tok_comma,table_reference) [ Tok_semicolon Tok_rparen Tok_eof Kw_where Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_group Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## table_reference
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production table_name -> identifier
## In state 202, spurious reduction of production table_primary -> table_name
## In state 198, spurious reduction of production list(sub_joined_table) ->
## In state 240, spurious reduction of production joined_table -> table_primary list(sub_joined_table)
## In state 213, spurious reduction of production table_reference -> joined_table
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Tok_comma Tok_unsigned_integer
##
## Ends in an error in state: 248.
##
## separated_nonempty_list(Tok_comma,table_reference) -> table_reference Tok_comma . separated_nonempty_list(Tok_comma,table_reference) [ Tok_semicolon Tok_rparen Tok_eof Kw_where Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_group Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## table_reference Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_where Tok_semicolon
##
## Ends in an error in state: 254.
##
## where_clause -> Kw_where . condition [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_group Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_where
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_where Tok_ident Tok_ident
##
## Ends in an error in state: 257.
##
## sub_select_clause -> from_clause option(where_clause) . option(group_by_clause) option(having_clause) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## from_clause option(where_clause)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 255, spurious reduction of production where_clause -> Kw_where condition
## In state 256, spurious reduction of production option(where_clause) -> where_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_group Tok_unsigned_integer
##
## Ends in an error in state: 258.
##
## group_by_clause -> Kw_group . Kw_by Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
## group_by_clause -> Kw_group . Kw_by separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_group
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_group Kw_by Tok_semicolon
##
## Ends in an error in state: 259.
##
## group_by_clause -> Kw_group Kw_by . Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
## group_by_clause -> Kw_group Kw_by . separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_group Kw_by Kw_rollup Tok_unsigned_integer
##
## Ends in an error in state: 260.
##
## group_by_clause -> Kw_group Kw_by Kw_rollup . Tok_lparen separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by Kw_rollup
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_group Kw_by Kw_rollup Tok_lparen Tok_semicolon
##
## Ends in an error in state: 261.
##
## group_by_clause -> Kw_group Kw_by Kw_rollup Tok_lparen . separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by Kw_rollup Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_group Kw_by Kw_rollup Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 262.
##
## group_by_clause -> Kw_group Kw_by Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression) . Tok_rparen [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 264, spurious reduction of production separated_nonempty_list(Tok_comma,expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_lparen Tok_ident Tok_ident
##
## Ends in an error in state: 264.
##
## separated_nonempty_list(Tok_comma,expression) -> expression . [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
## separated_nonempty_list(Tok_comma,expression) -> expression . Tok_comma separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_lparen Tok_ident Tok_comma Tok_semicolon
##
## Ends in an error in state: 265.
##
## separated_nonempty_list(Tok_comma,expression) -> expression Tok_comma . separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_having Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## expression Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_group Kw_by Kw_rollup Tok_lparen Tok_ident Tok_rparen Tok_unsigned_integer
##
## Ends in an error in state: 268.
##
## sub_select_clause -> from_clause option(where_clause) option(group_by_clause) . option(having_clause) [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## from_clause option(where_clause) option(group_by_clause)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_having Tok_semicolon
##
## Ends in an error in state: 269.
##
## having_clause -> Kw_having . condition [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_intersect Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_having
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_lparen Kw_select Tok_ident Tok_semicolon
##
## Ends in an error in state: 275.
##
## subquery -> Tok_lparen query_expression . Tok_rparen [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_rows Kw_row Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lparen query_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 417, spurious reduction of production option(pair(option(Kw_as),identifier)) ->
## In state 418, spurious reduction of production select_sublist -> expression option(pair(option(Kw_as),identifier))
## In state 24, spurious reduction of production separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist
## In state 21, spurious reduction of production select_list -> separated_nonempty_list(Tok_comma,select_sublist)
## In state 424, spurious reduction of production select_clause -> Kw_select select_list
## In state 36, spurious reduction of production option(into_clause) ->
## In state 39, spurious reduction of production option(sub_select_clause) ->
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
## In state 48, spurious reduction of production list(sub_query_term) ->
## In state 58, spurious reduction of production query_term -> query_primary list(sub_query_term)
## In state 44, spurious reduction of production list(sub_query_expression_body) ->
## In state 70, spurious reduction of production option(order_by_clause) ->
## In state 97, spurious reduction of production option(limit_clause) ->
## In state 182, spurious reduction of production query_expression_body -> query_term list(sub_query_expression_body) option(order_by_clause) option(limit_clause)
## In state 185, spurious reduction of production query_expression -> query_expression_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_timestamp Tok_unsigned_integer
##
## Ends in an error in state: 282.
##
## non_numeric_literal -> Kw_timestamp . Tok_string [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_timestamp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_time Tok_unsigned_integer
##
## Ends in an error in state: 284.
##
## non_numeric_literal -> Kw_time . Tok_string [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_time
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_date Tok_unsigned_integer
##
## Ends in an error in state: 288.
##
## non_numeric_literal -> Kw_date . Tok_string [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_date
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_false Tok_unsigned_integer
##
## Ends in an error in state: 290.
##
## term -> value_expression_primary . list(pair(star_or_slash,value_expression_primary)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## value_expression_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_slash Tok_semicolon
##
## Ends in an error in state: 293.
##
## list(pair(star_or_slash,value_expression_primary)) -> star_or_slash . value_expression_primary list(pair(star_or_slash,value_expression_primary)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## star_or_slash
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_slash Kw_false Tok_unsigned_integer
##
## Ends in an error in state: 294.
##
## list(pair(star_or_slash,value_expression_primary)) -> star_or_slash value_expression_primary . list(pair(star_or_slash,value_expression_primary)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## star_or_slash value_expression_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 296.
##
## value_expression_primary -> unsigned_value_expression_primary . list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## unsigned_value_expression_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_lsbrace Tok_semicolon
##
## Ends in an error in state: 297.
##
## list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) -> Tok_lsbrace . numeric_value_expression Tok_rsbrace list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lsbrace
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_minus Tok_semicolon
##
## Ends in an error in state: 299.
##
## list(pair(plus_or_minus,term)) -> plus_or_minus . term list(pair(plus_or_minus,term)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_ne2 Op_ne Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## plus_or_minus
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Op_minus Tok_typed_string
##
## Ends in an error in state: 303.
##
## value_expression_primary -> option(plus_or_minus) . unsigned_numeric_literal [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## option(plus_or_minus)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_lsbrace Tok_ident Tok_semicolon
##
## Ends in an error in state: 310.
##
## list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) -> Tok_lsbrace numeric_value_expression . Tok_rsbrace list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lsbrace numeric_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_lsbrace Tok_ident Tok_rsbrace Tok_unsigned_integer
##
## Ends in an error in state: 311.
##
## list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) -> Tok_lsbrace numeric_value_expression Tok_rsbrace . list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_ne2 Op_ne Op_minus Op_lt Op_le Op_gt Op_ge Op_eq Op_double_amp Op_concat Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lsbrace numeric_value_expression Tok_rsbrace
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_rsbrace
##
## Ends in an error in state: 315.
##
## common_value_expression -> numeric_value_expression . list(pair(amp_or_concat,numeric_value_expression)) [ Tok_semicolon Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_ne2 Op_ne Op_lt Op_le Op_gt Op_ge Op_eq Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## numeric_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_concat Tok_semicolon
##
## Ends in an error in state: 319.
##
## list(pair(amp_or_concat,numeric_value_expression)) -> amp_or_concat . numeric_value_expression list(pair(amp_or_concat,numeric_value_expression)) [ Tok_semicolon Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_ne2 Op_ne Op_lt Op_le Op_gt Op_ge Op_eq Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## amp_or_concat
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_concat Tok_ident Tok_rsbrace
##
## Ends in an error in state: 320.
##
## list(pair(amp_or_concat,numeric_value_expression)) -> amp_or_concat numeric_value_expression . list(pair(amp_or_concat,numeric_value_expression)) [ Tok_semicolon Tok_rparen Tok_lbrace Tok_ident Tok_eof Tok_comma Op_ne2 Op_ne Op_lt Op_le Op_gt Op_ge Op_eq Kw_where Kw_when Kw_union Kw_then Kw_similar Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_not Kw_no Kw_limit Kw_like_regex Kw_like Kw_left Kw_join Kw_is Kw_into Kw_intersect Kw_inner Kw_in Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_exists Kw_except Kw_escape Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_between Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## amp_or_concat numeric_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_lbrace
##
## Ends in an error in state: 322.
##
## boolean_primary -> common_value_expression . [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . comparison_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . is_null_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . between_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . like_regex_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . match_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . quantified_comparison_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . in_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . is_distinct [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## boolean_primary -> common_value_expression . exists_predicate [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_similar Tok_unsigned_integer
##
## Ends in an error in state: 330.
##
## match_predicate -> Kw_similar . Kw_to common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_similar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_similar Kw_to Tok_semicolon
##
## Ends in an error in state: 331.
##
## match_predicate -> Kw_similar Kw_to . common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_similar Kw_to
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_similar Kw_to Tok_ident Op_ne2
##
## Ends in an error in state: 332.
##
## match_predicate -> Kw_similar Kw_to common_value_expression . option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_similar Kw_to common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_like Tok_ident Tok_lbrace Tok_unsigned_integer
##
## Ends in an error in state: 333.
##
## match_predicate_escape -> Tok_lbrace . Kw_escape character Tok_rbrace [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lbrace
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_like Tok_ident Tok_lbrace Kw_escape Tok_unsigned_integer
##
## Ends in an error in state: 334.
##
## match_predicate_escape -> Tok_lbrace Kw_escape . character Tok_rbrace [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lbrace Kw_escape
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_like Tok_ident Tok_lbrace Kw_escape Tok_string Tok_unsigned_integer
##
## Ends in an error in state: 335.
##
## match_predicate_escape -> Tok_lbrace Kw_escape character . Tok_rbrace [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lbrace Kw_escape character
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_like Tok_ident Kw_escape Tok_unsigned_integer
##
## Ends in an error in state: 337.
##
## match_predicate_escape -> Kw_escape . character [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_escape
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Tok_unsigned_integer
##
## Ends in an error in state: 341.
##
## between_predicate -> Kw_not . Kw_between common_value_expression Kw_and common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## in_predicate -> Kw_not . Kw_in subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## in_predicate -> Kw_not . Kw_in Tok_lparen separated_nonempty_list(Tok_comma,common_value_expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## like_regex_predicate -> Kw_not . Kw_like_regex common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## match_predicate -> Kw_not . Kw_like common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## match_predicate -> Kw_not . Kw_similar Kw_to common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_similar Tok_unsigned_integer
##
## Ends in an error in state: 342.
##
## match_predicate -> Kw_not Kw_similar . Kw_to common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_similar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_similar Kw_to Tok_semicolon
##
## Ends in an error in state: 343.
##
## match_predicate -> Kw_not Kw_similar Kw_to . common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_similar Kw_to
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_similar Kw_to Tok_ident Op_ne2
##
## Ends in an error in state: 344.
##
## match_predicate -> Kw_not Kw_similar Kw_to common_value_expression . option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_similar Kw_to common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_like_regex Tok_semicolon
##
## Ends in an error in state: 346.
##
## like_regex_predicate -> Kw_not Kw_like_regex . common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_like_regex
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_like Tok_semicolon
##
## Ends in an error in state: 348.
##
## match_predicate -> Kw_not Kw_like . common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_like
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_like Tok_ident Op_ne2
##
## Ends in an error in state: 349.
##
## match_predicate -> Kw_not Kw_like common_value_expression . option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_like common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_in Tok_unsigned_integer
##
## Ends in an error in state: 351.
##
## in_predicate -> Kw_not Kw_in . subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## in_predicate -> Kw_not Kw_in . Tok_lparen separated_nonempty_list(Tok_comma,common_value_expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_in
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_in Tok_lparen Tok_semicolon
##
## Ends in an error in state: 352.
##
## in_predicate -> Kw_not Kw_in Tok_lparen . separated_nonempty_list(Tok_comma,common_value_expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## subquery -> Tok_lparen . query_expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_in Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_in Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 355.
##
## separated_nonempty_list(Tok_comma,common_value_expression) -> common_value_expression . [ Tok_rparen ]
## separated_nonempty_list(Tok_comma,common_value_expression) -> common_value_expression . Tok_comma separated_nonempty_list(Tok_comma,common_value_expression) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_in Tok_lparen Tok_ident Tok_comma Tok_semicolon
##
## Ends in an error in state: 356.
##
## separated_nonempty_list(Tok_comma,common_value_expression) -> common_value_expression Tok_comma . separated_nonempty_list(Tok_comma,common_value_expression) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## common_value_expression Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_between Tok_semicolon
##
## Ends in an error in state: 359.
##
## between_predicate -> Kw_not Kw_between . common_value_expression Kw_and common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_between
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_between Tok_ident Tok_semicolon
##
## Ends in an error in state: 360.
##
## between_predicate -> Kw_not Kw_between common_value_expression . Kw_and common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_between common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_not Kw_between Tok_ident Kw_and Tok_semicolon
##
## Ends in an error in state: 361.
##
## between_predicate -> Kw_not Kw_between common_value_expression Kw_and . common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_not Kw_between common_value_expression Kw_and
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_like_regex Tok_semicolon
##
## Ends in an error in state: 363.
##
## like_regex_predicate -> Kw_like_regex . common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_like_regex
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_like Tok_semicolon
##
## Ends in an error in state: 365.
##
## match_predicate -> Kw_like . common_value_expression option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_like
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_like Tok_ident Op_ne2
##
## Ends in an error in state: 366.
##
## match_predicate -> Kw_like common_value_expression . option(match_predicate_escape) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_like common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_is Tok_unsigned_integer
##
## Ends in an error in state: 368.
##
## is_distinct -> Kw_is . Kw_distinct Kw_from common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## is_distinct -> Kw_is . Kw_not Kw_distinct Kw_from common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## is_null_predicate -> Kw_is . Kw_null [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## is_null_predicate -> Kw_is . Kw_not Kw_null [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_is
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_is Kw_not Tok_unsigned_integer
##
## Ends in an error in state: 370.
##
## is_distinct -> Kw_is Kw_not . Kw_distinct Kw_from common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## is_null_predicate -> Kw_is Kw_not . Kw_null [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_is Kw_not
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_is Kw_not Kw_distinct Tok_unsigned_integer
##
## Ends in an error in state: 372.
##
## is_distinct -> Kw_is Kw_not Kw_distinct . Kw_from common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_is Kw_not Kw_distinct
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_is Kw_not Kw_distinct Kw_from Tok_semicolon
##
## Ends in an error in state: 373.
##
## is_distinct -> Kw_is Kw_not Kw_distinct Kw_from . common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_is Kw_not Kw_distinct Kw_from
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_is Kw_distinct Tok_unsigned_integer
##
## Ends in an error in state: 375.
##
## is_distinct -> Kw_is Kw_distinct . Kw_from common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_is Kw_distinct
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_is Kw_distinct Kw_from Tok_semicolon
##
## Ends in an error in state: 376.
##
## is_distinct -> Kw_is Kw_distinct Kw_from . common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_is Kw_distinct Kw_from
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_in Tok_unsigned_integer
##
## Ends in an error in state: 378.
##
## in_predicate -> Kw_in . subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## in_predicate -> Kw_in . Tok_lparen separated_nonempty_list(Tok_comma,common_value_expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_in
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_in Tok_lparen Tok_semicolon
##
## Ends in an error in state: 379.
##
## in_predicate -> Kw_in Tok_lparen . separated_nonempty_list(Tok_comma,common_value_expression) Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## subquery -> Tok_lparen . query_expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_in Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_exists Tok_unsigned_integer
##
## Ends in an error in state: 383.
##
## exists_predicate -> Kw_exists . subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_exists
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_exists Tok_lparen Tok_unsigned_integer
##
## Ends in an error in state: 384.
##
## subquery -> Tok_lparen . query_expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_between Tok_semicolon
##
## Ends in an error in state: 386.
##
## between_predicate -> Kw_between . common_value_expression Kw_and common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_between
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_between Tok_ident Tok_semicolon
##
## Ends in an error in state: 387.
##
## between_predicate -> Kw_between common_value_expression . Kw_and common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_between common_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_between Tok_ident Kw_and Tok_semicolon
##
## Ends in an error in state: 388.
##
## between_predicate -> Kw_between common_value_expression Kw_and . common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_between common_value_expression Kw_and
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Tok_semicolon
##
## Ends in an error in state: 398.
##
## comparison_predicate -> comparison_operator . common_value_expression [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator . Kw_any subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator . Kw_some subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator . Kw_all subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator . Kw_any Tok_lparen expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator . Kw_some Tok_lparen expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator . Kw_all Tok_lparen expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_some Tok_unsigned_integer
##
## Ends in an error in state: 399.
##
## quantified_comparison_predicate -> comparison_operator Kw_some . subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator Kw_some . Tok_lparen expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_some
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_some Tok_lparen Tok_semicolon
##
## Ends in an error in state: 400.
##
## quantified_comparison_predicate -> comparison_operator Kw_some Tok_lparen . expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## subquery -> Tok_lparen . query_expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_some Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_some Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 401.
##
## quantified_comparison_predicate -> comparison_operator Kw_some Tok_lparen expression . Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_some Tok_lparen expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_any Tok_unsigned_integer
##
## Ends in an error in state: 404.
##
## quantified_comparison_predicate -> comparison_operator Kw_any . subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator Kw_any . Tok_lparen expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_any
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_any Tok_lparen Tok_semicolon
##
## Ends in an error in state: 405.
##
## quantified_comparison_predicate -> comparison_operator Kw_any Tok_lparen . expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## subquery -> Tok_lparen . query_expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_any Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_any Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 406.
##
## quantified_comparison_predicate -> comparison_operator Kw_any Tok_lparen expression . Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_any Tok_lparen expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_all Tok_unsigned_integer
##
## Ends in an error in state: 409.
##
## quantified_comparison_predicate -> comparison_operator Kw_all . subquery [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## quantified_comparison_predicate -> comparison_operator Kw_all . Tok_lparen expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_all
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_all Tok_lparen Tok_semicolon
##
## Ends in an error in state: 410.
##
## quantified_comparison_predicate -> comparison_operator Kw_all Tok_lparen . expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
## subquery -> Tok_lparen . query_expression Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_all Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_eq Kw_all Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 411.
##
## quantified_comparison_predicate -> comparison_operator Kw_all Tok_lparen expression . Tok_rparen [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_where Kw_when Kw_union Kw_then Kw_right Kw_quote Kw_order Kw_or Kw_on Kw_offset Kw_null Kw_no Kw_limit Kw_left Kw_join Kw_into Kw_intersect Kw_inner Kw_header Kw_having Kw_group Kw_full Kw_from Kw_fetch Kw_except Kw_end Kw_encoding Kw_else Kw_desc Kw_delimiter Kw_cross Kw_asc Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## comparison_operator Kw_all Tok_lparen expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_where
##
## Ends in an error in state: 417.
##
## select_sublist -> expression . option(pair(option(Kw_as),identifier)) [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 419.
##
## option(pair(option(Kw_as),identifier)) -> option(Kw_as) . identifier [ Tok_semicolon Tok_rparen Tok_eof Tok_comma Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## option(Kw_as)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_all Tok_semicolon
##
## Ends in an error in state: 422.
##
## select_clause -> Kw_select Kw_all . select_list [ Tok_semicolon Tok_rparen Tok_eof Kw_union Kw_order Kw_offset Kw_limit Kw_into Kw_intersect Kw_from Kw_fetch Kw_except ]
##
## The known suffix of the stack is as follows:
## Kw_select Kw_all
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_with Tok_ident Kw_as Tok_lparen Kw_select Tok_ident Tok_semicolon
##
## Ends in an error in state: 425.
##
## with_list_element -> identifier option(column_list) Kw_as Tok_lparen query_expression . Tok_rparen [ Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier option(column_list) Kw_as Tok_lparen query_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 417, spurious reduction of production option(pair(option(Kw_as),identifier)) ->
## In state 418, spurious reduction of production select_sublist -> expression option(pair(option(Kw_as),identifier))
## In state 24, spurious reduction of production separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist
## In state 21, spurious reduction of production select_list -> separated_nonempty_list(Tok_comma,select_sublist)
## In state 424, spurious reduction of production select_clause -> Kw_select select_list
## In state 36, spurious reduction of production option(into_clause) ->
## In state 39, spurious reduction of production option(sub_select_clause) ->
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
## In state 48, spurious reduction of production list(sub_query_term) ->
## In state 58, spurious reduction of production query_term -> query_primary list(sub_query_term)
## In state 44, spurious reduction of production list(sub_query_expression_body) ->
## In state 70, spurious reduction of production option(order_by_clause) ->
## In state 97, spurious reduction of production option(limit_clause) ->
## In state 182, spurious reduction of production query_expression_body -> query_term list(sub_query_expression_body) option(order_by_clause) option(limit_clause)
## In state 185, spurious reduction of production query_expression -> query_expression_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_rparen
##
## Ends in an error in state: 433.
##
## separated_nonempty_list(Tok_semicolon,entry) -> entry . [ Tok_eof ]
## separated_nonempty_list(Tok_semicolon,entry) -> entry . Tok_semicolon separated_nonempty_list(Tok_semicolon,entry) [ Tok_eof ]
##
## The known suffix of the stack is as follows:
## entry
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 296, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 313, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 290, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 314, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 298, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 309, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 315, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 318, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 322, spurious reduction of production boolean_primary -> common_value_expression
## In state 416, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 92, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 23, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 89, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 22, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 88, spurious reduction of production condition -> boolean_value_expression
## In state 87, spurious reduction of production expression -> condition
## In state 417, spurious reduction of production option(pair(option(Kw_as),identifier)) ->
## In state 418, spurious reduction of production select_sublist -> expression option(pair(option(Kw_as),identifier))
## In state 24, spurious reduction of production separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist
## In state 21, spurious reduction of production select_list -> separated_nonempty_list(Tok_comma,select_sublist)
## In state 424, spurious reduction of production select_clause -> Kw_select select_list
## In state 36, spurious reduction of production option(into_clause) ->
## In state 39, spurious reduction of production option(sub_select_clause) ->
## In state 252, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause)
## In state 52, spurious reduction of production query_primary -> query
## In state 48, spurious reduction of production list(sub_query_term) ->
## In state 58, spurious reduction of production query_term -> query_primary list(sub_query_term)
## In state 44, spurious reduction of production list(sub_query_expression_body) ->
## In state 70, spurious reduction of production option(order_by_clause) ->
## In state 97, spurious reduction of production option(limit_clause) ->
## In state 182, spurious reduction of production query_expression_body -> query_term list(sub_query_expression_body) option(order_by_clause) option(limit_clause)
## In state 185, spurious reduction of production query_expression -> query_expression_body
## In state 432, spurious reduction of production directly_executable_statement -> query_expression
## In state 436, spurious reduction of production entry -> directly_executable_statement
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_semicolon Tok_unsigned_integer
##
## Ends in an error in state: 434.
##
## separated_nonempty_list(Tok_semicolon,entry) -> entry Tok_semicolon . separated_nonempty_list(Tok_semicolon,entry) [ Tok_eof ]
##
## The known suffix of the stack is as follows:
## entry Tok_semicolon
##

<YOUR SYNTAX ERROR MESSAGE HERE>

