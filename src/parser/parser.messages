entries: Tok_unsigned_integer
##
## Ends in an error in state: 0.
##
## entries' -> . entries [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_semicolon
##
## Ends in an error in state: 1.
##
## select_clause -> Kw_select . option(set_qualifier) select_list [ Tok_semicolon Tok_eof Kw_into Kw_intersect Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## Kw_select
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_all Tok_semicolon
##
## Ends in an error in state: 5.
##
## select_clause -> Kw_select option(set_qualifier) . select_list [ Tok_semicolon Tok_eof Kw_into Kw_intersect Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## Kw_select option(set_qualifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_all_in_group Tok_unsigned_integer
##
## Ends in an error in state: 12.
##
## separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist . [ Tok_semicolon Tok_eof Kw_into Kw_intersect Kw_group Kw_from ]
## separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist . Tok_comma separated_nonempty_list(Tok_comma,select_sublist) [ Tok_semicolon Tok_eof Kw_into Kw_intersect Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## select_sublist
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_comma Tok_semicolon
##
## Ends in an error in state: 13.
##
## separated_nonempty_list(Tok_comma,select_sublist) -> select_sublist Tok_comma . separated_nonempty_list(Tok_comma,select_sublist) [ Tok_semicolon Tok_eof Kw_into Kw_intersect Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## select_sublist Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_not Tok_semicolon
##
## Ends in an error in state: 15.
##
## boolean_factor -> option(Kw_not) . boolean_primary [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## option(Kw_not)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_dollar Tok_typed_string
##
## Ends in an error in state: 20.
##
## unsigned_value_expression_primary -> Tok_dollar . Tok_unsigned_integer [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_lsbrace Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_dollar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_timestamp Tok_unsigned_integer
##
## Ends in an error in state: 26.
##
## non_numeric_literal -> Kw_timestamp . Tok_string [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_timestamp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_time Tok_unsigned_integer
##
## Ends in an error in state: 28.
##
## non_numeric_literal -> Kw_time . Tok_string [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_time
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_date Tok_unsigned_integer
##
## Ends in an error in state: 32.
##
## non_numeric_literal -> Kw_date . Tok_string [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Kw_date
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Kw_false Tok_unsigned_integer
##
## Ends in an error in state: 34.
##
## term -> value_expression_primary . list(pair(star_or_slash,value_expression_primary)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## value_expression_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_slash Tok_semicolon
##
## Ends in an error in state: 37.
##
## list(pair(star_or_slash,value_expression_primary)) -> star_or_slash . value_expression_primary list(pair(star_or_slash,value_expression_primary)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## star_or_slash
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_slash Kw_false Tok_unsigned_integer
##
## Ends in an error in state: 38.
##
## list(pair(star_or_slash,value_expression_primary)) -> star_or_slash value_expression_primary . list(pair(star_or_slash,value_expression_primary)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## star_or_slash value_expression_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 40.
##
## value_expression_primary -> unsigned_value_expression_primary . list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## unsigned_value_expression_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_lsbrace Tok_semicolon
##
## Ends in an error in state: 41.
##
## list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) -> Tok_lsbrace . numeric_value_expression Tok_rsbrace list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lsbrace
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_minus Tok_semicolon
##
## Ends in an error in state: 43.
##
## list(pair(plus_or_minus,term)) -> plus_or_minus . term list(pair(plus_or_minus,term)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## plus_or_minus
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Op_minus Tok_typed_string
##
## Ends in an error in state: 47.
##
## value_expression_primary -> option(plus_or_minus) . unsigned_numeric_literal [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## option(plus_or_minus)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_lsbrace Tok_ident Tok_semicolon
##
## Ends in an error in state: 55.
##
## list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) -> Tok_lsbrace numeric_value_expression . Tok_rsbrace list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lsbrace numeric_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_lsbrace Tok_ident Tok_rsbrace Tok_unsigned_integer
##
## Ends in an error in state: 56.
##
## list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) -> Tok_lsbrace numeric_value_expression Tok_rsbrace . list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) [ Tok_semicolon Tok_rsbrace Tok_rparen Tok_ident Tok_eof Tok_comma Op_star Op_slash Op_plus Op_minus Op_double_amp Op_concat Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## Tok_lsbrace numeric_value_expression Tok_rsbrace
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_rsbrace
##
## Ends in an error in state: 60.
##
## common_value_expression -> numeric_value_expression . list(pair(amp_or_concat,numeric_value_expression)) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## numeric_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_concat Tok_semicolon
##
## Ends in an error in state: 64.
##
## list(pair(amp_or_concat,numeric_value_expression)) -> amp_or_concat . numeric_value_expression list(pair(amp_or_concat,numeric_value_expression)) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## amp_or_concat
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Op_concat Tok_ident Tok_rsbrace
##
## Ends in an error in state: 65.
##
## list(pair(amp_or_concat,numeric_value_expression)) -> amp_or_concat numeric_value_expression . list(pair(amp_or_concat,numeric_value_expression)) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as Kw_and ]
##
## The known suffix of the stack is as follows:
## amp_or_concat numeric_value_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_rparen
##
## Ends in an error in state: 69.
##
## select_sublist -> expression . option(pair(option(Kw_as),identifier)) [ Tok_semicolon Tok_eof Tok_comma Kw_into Kw_intersect Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 60, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 63, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 67, spurious reduction of production boolean_primary -> common_value_expression
## In state 68, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 79, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 11, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 76, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 10, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 75, spurious reduction of production condition -> boolean_value_expression
## In state 74, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 72.
##
## option(pair(option(Kw_as),identifier)) -> option(Kw_as) . identifier [ Tok_semicolon Tok_eof Tok_comma Kw_into Kw_intersect Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## option(Kw_as)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_or Tok_semicolon
##
## Ends in an error in state: 77.
##
## separated_nonempty_list(Kw_or,boolean_term) -> boolean_term Kw_or . separated_nonempty_list(Kw_or,boolean_term) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_into Kw_intersect Kw_group Kw_from Kw_as ]
##
## The known suffix of the stack is as follows:
## boolean_term Kw_or
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_and Tok_semicolon
##
## Ends in an error in state: 80.
##
## separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor Kw_and . separated_nonempty_list(Kw_and,boolean_factor) [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_or Kw_into Kw_intersect Kw_group Kw_from Kw_as ]
##
## The known suffix of the stack is as follows:
## boolean_factor Kw_and
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Op_star Tok_unsigned_integer
##
## Ends in an error in state: 85.
##
## query -> select_clause . option(into_clause) option(sub_select_clause) option(group_by_clause) [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## select_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_into Tok_unsigned_integer
##
## Ends in an error in state: 86.
##
## into_clause -> Kw_into . identifier [ Tok_semicolon Tok_eof Kw_intersect Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## Kw_into
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_into Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 88.
##
## query -> select_clause option(into_clause) . option(sub_select_clause) option(group_by_clause) [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## select_clause option(into_clause)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_unsigned_integer
##
## Ends in an error in state: 89.
##
## from_clause -> Kw_from . separated_nonempty_list(Tok_comma,table_reference) [ Tok_semicolon Tok_eof Kw_intersect Kw_group ]
##
## The known suffix of the stack is as follows:
## Kw_from
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 90.
##
## separated_nonempty_list(Tok_comma,table_reference) -> table_reference . [ Tok_semicolon Tok_eof Kw_intersect Kw_group ]
## separated_nonempty_list(Tok_comma,table_reference) -> table_reference . Tok_comma separated_nonempty_list(Tok_comma,table_reference) [ Tok_semicolon Tok_eof Kw_intersect Kw_group ]
##
## The known suffix of the stack is as follows:
## table_reference
##

Can not use unsigned integer as table reference

entries: Kw_select Tok_ident Kw_from Tok_ident Tok_comma Tok_unsigned_integer
##
## Ends in an error in state: 91.
##
## separated_nonempty_list(Tok_comma,table_reference) -> table_reference Tok_comma . separated_nonempty_list(Tok_comma,table_reference) [ Tok_semicolon Tok_eof Kw_intersect Kw_group ]
##
## The known suffix of the stack is as follows:
## table_reference Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Tok_unsigned_integer
##
## Ends in an error in state: 96.
##
## table_name -> identifier . option(Kw_as) identifier [ Tok_semicolon Tok_eof Tok_comma Kw_intersect Kw_group ]
## table_name -> identifier . [ Tok_semicolon Tok_eof Tok_comma Kw_intersect Kw_group ]
##
## The known suffix of the stack is as follows:
## identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_from Tok_ident Kw_as Tok_unsigned_integer
##
## Ends in an error in state: 97.
##
## table_name -> identifier option(Kw_as) . identifier [ Tok_semicolon Tok_eof Tok_comma Kw_intersect Kw_group ]
##
## The known suffix of the stack is as follows:
## identifier option(Kw_as)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Tok_unsigned_integer
##
## Ends in an error in state: 102.
##
## group_by_clause -> Kw_group . Kw_by Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_eof Kw_intersect ]
## group_by_clause -> Kw_group . Kw_by separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## Kw_group
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Kw_by Tok_semicolon
##
## Ends in an error in state: 103.
##
## group_by_clause -> Kw_group Kw_by . Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_eof Kw_intersect ]
## group_by_clause -> Kw_group Kw_by . separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Kw_by Kw_rollup Tok_unsigned_integer
##
## Ends in an error in state: 104.
##
## group_by_clause -> Kw_group Kw_by Kw_rollup . Tok_lparen separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by Kw_rollup
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Kw_by Kw_rollup Tok_lparen Tok_semicolon
##
## Ends in an error in state: 105.
##
## group_by_clause -> Kw_group Kw_by Kw_rollup Tok_lparen . separated_nonempty_list(Tok_comma,expression) Tok_rparen [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by Kw_rollup Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Kw_by Kw_rollup Tok_lparen Tok_ident Tok_semicolon
##
## Ends in an error in state: 106.
##
## group_by_clause -> Kw_group Kw_by Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression) . Tok_rparen [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by Kw_rollup Tok_lparen separated_nonempty_list(Tok_comma,expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 60, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 63, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 67, spurious reduction of production boolean_primary -> common_value_expression
## In state 68, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 79, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 11, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 76, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 10, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 75, spurious reduction of production condition -> boolean_value_expression
## In state 74, spurious reduction of production expression -> condition
## In state 108, spurious reduction of production separated_nonempty_list(Tok_comma,expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Kw_by Tok_ident Tok_ident
##
## Ends in an error in state: 108.
##
## separated_nonempty_list(Tok_comma,expression) -> expression . [ Tok_semicolon Tok_rparen Tok_eof Kw_intersect ]
## separated_nonempty_list(Tok_comma,expression) -> expression . Tok_comma separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_rparen Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 60, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 63, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 67, spurious reduction of production boolean_primary -> common_value_expression
## In state 68, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 79, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 11, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 76, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 10, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 75, spurious reduction of production condition -> boolean_value_expression
## In state 74, spurious reduction of production expression -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Kw_by Tok_ident Tok_comma Tok_semicolon
##
## Ends in an error in state: 109.
##
## separated_nonempty_list(Tok_comma,expression) -> expression Tok_comma . separated_nonempty_list(Tok_comma,expression) [ Tok_semicolon Tok_rparen Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## expression Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_group Kw_by Tok_ident Tok_rparen
##
## Ends in an error in state: 117.
##
## query_term -> query_primary . list(sub_query_term) [ Tok_semicolon Tok_eof ]
##
## The known suffix of the stack is as follows:
## query_primary
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 60, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 63, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 67, spurious reduction of production boolean_primary -> common_value_expression
## In state 68, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 79, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 11, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 76, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 10, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 75, spurious reduction of production condition -> boolean_value_expression
## In state 74, spurious reduction of production expression -> condition
## In state 108, spurious reduction of production separated_nonempty_list(Tok_comma,expression) -> expression
## In state 111, spurious reduction of production group_by_clause -> Kw_group Kw_by separated_nonempty_list(Tok_comma,expression)
## In state 113, spurious reduction of production option(group_by_clause) -> group_by_clause
## In state 112, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause) option(group_by_clause)
## In state 121, spurious reduction of production query_primary -> query
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_intersect Tok_unsigned_integer
##
## Ends in an error in state: 118.
##
## sub_query_term -> Kw_intersect . option(set_qualifier) query_primary [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## Kw_intersect
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_intersect Kw_all Tok_unsigned_integer
##
## Ends in an error in state: 119.
##
## sub_query_term -> Kw_intersect option(set_qualifier) . query_primary [ Tok_semicolon Tok_eof Kw_intersect ]
##
## The known suffix of the stack is as follows:
## Kw_intersect option(set_qualifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Kw_intersect Kw_select Tok_ident Kw_group Kw_by Tok_ident Tok_rparen
##
## Ends in an error in state: 122.
##
## list(sub_query_term) -> sub_query_term . list(sub_query_term) [ Tok_semicolon Tok_eof ]
##
## The known suffix of the stack is as follows:
## sub_query_term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 40, spurious reduction of production list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace)) ->
## In state 58, spurious reduction of production value_expression_primary -> unsigned_value_expression_primary list(delimited(Tok_lsbrace,numeric_value_expression,Tok_rsbrace))
## In state 34, spurious reduction of production list(pair(star_or_slash,value_expression_primary)) ->
## In state 59, spurious reduction of production term -> value_expression_primary list(pair(star_or_slash,value_expression_primary))
## In state 42, spurious reduction of production list(pair(plus_or_minus,term)) ->
## In state 54, spurious reduction of production numeric_value_expression -> term list(pair(plus_or_minus,term))
## In state 60, spurious reduction of production list(pair(amp_or_concat,numeric_value_expression)) ->
## In state 63, spurious reduction of production common_value_expression -> numeric_value_expression list(pair(amp_or_concat,numeric_value_expression))
## In state 67, spurious reduction of production boolean_primary -> common_value_expression
## In state 68, spurious reduction of production boolean_factor -> option(Kw_not) boolean_primary
## In state 79, spurious reduction of production separated_nonempty_list(Kw_and,boolean_factor) -> boolean_factor
## In state 11, spurious reduction of production boolean_term -> separated_nonempty_list(Kw_and,boolean_factor)
## In state 76, spurious reduction of production separated_nonempty_list(Kw_or,boolean_term) -> boolean_term
## In state 10, spurious reduction of production boolean_value_expression -> separated_nonempty_list(Kw_or,boolean_term)
## In state 75, spurious reduction of production condition -> boolean_value_expression
## In state 74, spurious reduction of production expression -> condition
## In state 108, spurious reduction of production separated_nonempty_list(Tok_comma,expression) -> expression
## In state 111, spurious reduction of production group_by_clause -> Kw_group Kw_by separated_nonempty_list(Tok_comma,expression)
## In state 113, spurious reduction of production option(group_by_clause) -> group_by_clause
## In state 112, spurious reduction of production query -> select_clause option(into_clause) option(sub_select_clause) option(group_by_clause)
## In state 121, spurious reduction of production query_primary -> query
## In state 120, spurious reduction of production sub_query_term -> Kw_intersect option(set_qualifier) query_primary
##

<YOUR SYNTAX ERROR MESSAGE HERE>

entries: Kw_select Tok_ident Tok_semicolon Tok_unsigned_integer
##
## Ends in an error in state: 128.
##
## separated_nonempty_list(Tok_semicolon,entry) -> entry Tok_semicolon . separated_nonempty_list(Tok_semicolon,entry) [ Tok_eof ]
##
## The known suffix of the stack is as follows:
## entry Tok_semicolon
##

<YOUR SYNTAX ERROR MESSAGE HERE>
