statements: Tok_string
##
## Ends in an error in state: 0.
##
## statements' -> . statements [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Tok_semicolon
##
## Ends in an error in state: 1.
##
## select_clause -> Kw_select . option(quantifier) separated_nonempty_list(Tok_comma,result_column) [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## Kw_select
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Kw_all Tok_semicolon
##
## Ends in an error in state: 4.
##
## select_clause -> Kw_select option(quantifier) . separated_nonempty_list(Tok_comma,result_column) [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## Kw_select option(quantifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Kw_abs Tok_period Tok_string
##
## Ends in an error in state: 319.
##
## qualified_name -> schema_name Tok_period . table_name Tok_period column_name [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_zone Kw_year Kw_yaml Kw_xmltext Kw_xmldeclaration Kw_xmlconcat Kw_xmlcomment Kw_xml Kw_without Kw_within Kw_with Kw_window Kw_width Kw_where Kw_when Kw_wellformed Kw_view Kw_version Kw_varying Kw_variadic Kw_varchar Kw_varbinary Kw_var_samp Kw_var_pop Kw_values Kw_value Kw_using Kw_user Kw_use Kw_usage Kw_upsert Kw_unnest Kw_unknown Kw_union Kw_unbounded Kw_type Kw_true Kw_trim Kw_translator Kw_translate Kw_trailing Kw_to_chars Kw_to_bytes Kw_to Kw_tinyint Kw_timestampdiff Kw_timestampadd Kw_timestamp Kw_time Kw_ties Kw_then Kw_texttable Kw_textagg Kw_text Kw_tablesample Kw_table Kw_system_user Kw_system Kw_sum Kw_substring Kw_string Kw_stddev_samp Kw_stddev_pop Kw_sql_tsi_year Kw_sql_tsi_week Kw_sql_tsi_second Kw_sql_tsi_quarter Kw_sql_tsi_month Kw_sql_tsi_minute Kw_sql_tsi_hour Kw_sql_tsi_frac_second Kw_sql_tsi_day Kw_some Kw_smallint Kw_skip Kw_similar Kw_short Kw_sets Kw_set Kw_session_user Kw_serial Kw_selector Kw_select Kw_second Kw_search Kw_scope Kw_schema Kw_rows Kw_row_number Kw_row Kw_rollup Kw_role Kw_right Kw_result Kw_repository Kw_repeatable Kw_rename Kw_ref Kw_recursive Kw_real Kw_rank Kw_range Kw_raise Kw_quote Kw_querystring Kw_quarter Kw_privileges Kw_preserve Kw_precision Kw_preceding Kw_position Kw_policy Kw_percent_rank Kw_path Kw_passing Kw_partition Kw_over Kw_outer Kw_others Kw_ordinality Kw_order Kw_or Kw_only Kw_on Kw_offset Kw_octets Kw_objecttable Kw_object Kw_numeric Kw_nulls Kw_nullif Kw_null Kw_not Kw_none Kw_no Kw_next Kw_nclob Kw_nchar Kw_natural Kw_national Kw_namespace Kw_name Kw_multiset Kw_month Kw_module Kw_minute Kw_min Kw_max Kw_mask Kw_long Kw_localtimestamp Kw_localtime Kw_local Kw_listagg Kw_limit Kw_like_regex Kw_like Kw_left Kw_leading Kw_lateral Kw_last Kw_large Kw_key Kw_jsontable Kw_jsonobject Kw_jsonarray_agg Kw_json Kw_join Kw_jaas Kw_is Kw_into Kw_interval Kw_intersect Kw_integer Kw_int Kw_instead Kw_insert Kw_inner Kw_indicator Kw_index Kw_including Kw_in Kw_hour Kw_header Kw_having Kw_groups Kw_grouping Kw_group Kw_geometry Kw_geography Kw_full Kw_from Kw_format Kw_for Kw_following Kw_float Kw_first Kw_filter Kw_fetch Kw_false Kw_extract Kw_explain Kw_exists Kw_excluding Kw_exclude Kw_exception Kw_except Kw_every Kw_escape Kw_epoch Kw_end Kw_encoding Kw_enabled Kw_empty Kw_else Kw_element Kw_doy Kw_dow Kw_double Kw_domain Kw_document Kw_distinct Kw_disabled Kw_desc Kw_depth Kw_dense_rank Kw_delimiter Kw_default Kw_decimal Kw_dec Kw_day Kw_date Kw_database Kw_data Kw_cycle Kw_current_user Kw_current_transform_group_for_type Kw_current_timestamp Kw_current_time Kw_current_role Kw_current_path Kw_current_default_transform_group Kw_current_date Kw_current Kw_cume_dist Kw_cube Kw_cross Kw_count_big Kw_count Kw_corresponding Kw_convert Kw_control Kw_content Kw_condition Kw_columns Kw_collation Kw_collate Kw_code_units Kw_coalesce Kw_clob Kw_characters Kw_character Kw_char Kw_chain Kw_cast Kw_case Kw_byte Kw_by Kw_breadth Kw_both Kw_boolean Kw_blob Kw_binary Kw_biginteger Kw_bigint Kw_bigdecimal Kw_between Kw_bernoulli Kw_avg Kw_auto_increment Kw_at Kw_asc Kw_as Kw_arraytable Kw_array Kw_any Kw_and Kw_analyze Kw_all Kw_after Kw_accesspattern Kw_access Kw_abs ]
##
## The known suffix of the stack is as follows:
## schema_name Tok_period
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Kw_abs Tok_period Kw_current_date Kw_following
##
## Ends in an error in state: 320.
##
## qualified_name -> schema_name Tok_period table_name . Tok_period column_name [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_zone Kw_year Kw_yaml Kw_xmltext Kw_xmldeclaration Kw_xmlconcat Kw_xmlcomment Kw_xml Kw_without Kw_within Kw_with Kw_window Kw_width Kw_where Kw_when Kw_wellformed Kw_view Kw_version Kw_varying Kw_variadic Kw_varchar Kw_varbinary Kw_var_samp Kw_var_pop Kw_values Kw_value Kw_using Kw_user Kw_use Kw_usage Kw_upsert Kw_unnest Kw_unknown Kw_union Kw_unbounded Kw_type Kw_true Kw_trim Kw_translator Kw_translate Kw_trailing Kw_to_chars Kw_to_bytes Kw_to Kw_tinyint Kw_timestampdiff Kw_timestampadd Kw_timestamp Kw_time Kw_ties Kw_then Kw_texttable Kw_textagg Kw_text Kw_tablesample Kw_table Kw_system_user Kw_system Kw_sum Kw_substring Kw_string Kw_stddev_samp Kw_stddev_pop Kw_sql_tsi_year Kw_sql_tsi_week Kw_sql_tsi_second Kw_sql_tsi_quarter Kw_sql_tsi_month Kw_sql_tsi_minute Kw_sql_tsi_hour Kw_sql_tsi_frac_second Kw_sql_tsi_day Kw_some Kw_smallint Kw_skip Kw_similar Kw_short Kw_sets Kw_set Kw_session_user Kw_serial Kw_selector Kw_select Kw_second Kw_search Kw_scope Kw_schema Kw_rows Kw_row_number Kw_row Kw_rollup Kw_role Kw_right Kw_result Kw_repository Kw_repeatable Kw_rename Kw_ref Kw_recursive Kw_real Kw_rank Kw_range Kw_raise Kw_quote Kw_querystring Kw_quarter Kw_privileges Kw_preserve Kw_precision Kw_preceding Kw_position Kw_policy Kw_percent_rank Kw_path Kw_passing Kw_partition Kw_over Kw_outer Kw_others Kw_ordinality Kw_order Kw_or Kw_only Kw_on Kw_offset Kw_octets Kw_objecttable Kw_object Kw_numeric Kw_nulls Kw_nullif Kw_null Kw_not Kw_none Kw_no Kw_next Kw_nclob Kw_nchar Kw_natural Kw_national Kw_namespace Kw_name Kw_multiset Kw_month Kw_module Kw_minute Kw_min Kw_max Kw_mask Kw_long Kw_localtimestamp Kw_localtime Kw_local Kw_listagg Kw_limit Kw_like_regex Kw_like Kw_left Kw_leading Kw_lateral Kw_last Kw_large Kw_key Kw_jsontable Kw_jsonobject Kw_jsonarray_agg Kw_json Kw_join Kw_jaas Kw_is Kw_into Kw_interval Kw_intersect Kw_integer Kw_int Kw_instead Kw_insert Kw_inner Kw_indicator Kw_index Kw_including Kw_in Kw_hour Kw_header Kw_having Kw_groups Kw_grouping Kw_group Kw_geometry Kw_geography Kw_full Kw_from Kw_format Kw_for Kw_following Kw_float Kw_first Kw_filter Kw_fetch Kw_false Kw_extract Kw_explain Kw_exists Kw_excluding Kw_exclude Kw_exception Kw_except Kw_every Kw_escape Kw_epoch Kw_end Kw_encoding Kw_enabled Kw_empty Kw_else Kw_element Kw_doy Kw_dow Kw_double Kw_domain Kw_document Kw_distinct Kw_disabled Kw_desc Kw_depth Kw_dense_rank Kw_delimiter Kw_default Kw_decimal Kw_dec Kw_day Kw_date Kw_database Kw_data Kw_cycle Kw_current_user Kw_current_transform_group_for_type Kw_current_timestamp Kw_current_time Kw_current_role Kw_current_path Kw_current_default_transform_group Kw_current_date Kw_current Kw_cume_dist Kw_cube Kw_cross Kw_count_big Kw_count Kw_corresponding Kw_convert Kw_control Kw_content Kw_condition Kw_columns Kw_collation Kw_collate Kw_code_units Kw_coalesce Kw_clob Kw_characters Kw_character Kw_char Kw_chain Kw_cast Kw_case Kw_byte Kw_by Kw_breadth Kw_both Kw_boolean Kw_blob Kw_binary Kw_biginteger Kw_bigint Kw_bigdecimal Kw_between Kw_bernoulli Kw_avg Kw_auto_increment Kw_at Kw_asc Kw_as Kw_arraytable Kw_array Kw_any Kw_and Kw_analyze Kw_all Kw_after Kw_accesspattern Kw_access Kw_abs ]
##
## The known suffix of the stack is as follows:
## schema_name Tok_period table_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Kw_abs Tok_period Kw_current_date Tok_period Tok_string
##
## Ends in an error in state: 321.
##
## qualified_name -> schema_name Tok_period table_name Tok_period . column_name [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_zone Kw_year Kw_yaml Kw_xmltext Kw_xmldeclaration Kw_xmlconcat Kw_xmlcomment Kw_xml Kw_without Kw_within Kw_with Kw_window Kw_width Kw_where Kw_when Kw_wellformed Kw_view Kw_version Kw_varying Kw_variadic Kw_varchar Kw_varbinary Kw_var_samp Kw_var_pop Kw_values Kw_value Kw_using Kw_user Kw_use Kw_usage Kw_upsert Kw_unnest Kw_unknown Kw_union Kw_unbounded Kw_type Kw_true Kw_trim Kw_translator Kw_translate Kw_trailing Kw_to_chars Kw_to_bytes Kw_to Kw_tinyint Kw_timestampdiff Kw_timestampadd Kw_timestamp Kw_time Kw_ties Kw_then Kw_texttable Kw_textagg Kw_text Kw_tablesample Kw_table Kw_system_user Kw_system Kw_sum Kw_substring Kw_string Kw_stddev_samp Kw_stddev_pop Kw_sql_tsi_year Kw_sql_tsi_week Kw_sql_tsi_second Kw_sql_tsi_quarter Kw_sql_tsi_month Kw_sql_tsi_minute Kw_sql_tsi_hour Kw_sql_tsi_frac_second Kw_sql_tsi_day Kw_some Kw_smallint Kw_skip Kw_similar Kw_short Kw_sets Kw_set Kw_session_user Kw_serial Kw_selector Kw_select Kw_second Kw_search Kw_scope Kw_schema Kw_rows Kw_row_number Kw_row Kw_rollup Kw_role Kw_right Kw_result Kw_repository Kw_repeatable Kw_rename Kw_ref Kw_recursive Kw_real Kw_rank Kw_range Kw_raise Kw_quote Kw_querystring Kw_quarter Kw_privileges Kw_preserve Kw_precision Kw_preceding Kw_position Kw_policy Kw_percent_rank Kw_path Kw_passing Kw_partition Kw_over Kw_outer Kw_others Kw_ordinality Kw_order Kw_or Kw_only Kw_on Kw_offset Kw_octets Kw_objecttable Kw_object Kw_numeric Kw_nulls Kw_nullif Kw_null Kw_not Kw_none Kw_no Kw_next Kw_nclob Kw_nchar Kw_natural Kw_national Kw_namespace Kw_name Kw_multiset Kw_month Kw_module Kw_minute Kw_min Kw_max Kw_mask Kw_long Kw_localtimestamp Kw_localtime Kw_local Kw_listagg Kw_limit Kw_like_regex Kw_like Kw_left Kw_leading Kw_lateral Kw_last Kw_large Kw_key Kw_jsontable Kw_jsonobject Kw_jsonarray_agg Kw_json Kw_join Kw_jaas Kw_is Kw_into Kw_interval Kw_intersect Kw_integer Kw_int Kw_instead Kw_insert Kw_inner Kw_indicator Kw_index Kw_including Kw_in Kw_hour Kw_header Kw_having Kw_groups Kw_grouping Kw_group Kw_geometry Kw_geography Kw_full Kw_from Kw_format Kw_for Kw_following Kw_float Kw_first Kw_filter Kw_fetch Kw_false Kw_extract Kw_explain Kw_exists Kw_excluding Kw_exclude Kw_exception Kw_except Kw_every Kw_escape Kw_epoch Kw_end Kw_encoding Kw_enabled Kw_empty Kw_else Kw_element Kw_doy Kw_dow Kw_double Kw_domain Kw_document Kw_distinct Kw_disabled Kw_desc Kw_depth Kw_dense_rank Kw_delimiter Kw_default Kw_decimal Kw_dec Kw_day Kw_date Kw_database Kw_data Kw_cycle Kw_current_user Kw_current_transform_group_for_type Kw_current_timestamp Kw_current_time Kw_current_role Kw_current_path Kw_current_default_transform_group Kw_current_date Kw_current Kw_cume_dist Kw_cube Kw_cross Kw_count_big Kw_count Kw_corresponding Kw_convert Kw_control Kw_content Kw_condition Kw_columns Kw_collation Kw_collate Kw_code_units Kw_coalesce Kw_clob Kw_characters Kw_character Kw_char Kw_chain Kw_cast Kw_case Kw_byte Kw_by Kw_breadth Kw_both Kw_boolean Kw_blob Kw_binary Kw_biginteger Kw_bigint Kw_bigdecimal Kw_between Kw_bernoulli Kw_avg Kw_auto_increment Kw_at Kw_asc Kw_as Kw_arraytable Kw_array Kw_any Kw_and Kw_analyze Kw_all Kw_after Kw_accesspattern Kw_access Kw_abs ]
##
## The known suffix of the stack is as follows:
## schema_name Tok_period table_name Tok_period
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_following
##
## Ends in an error in state: 324.
##
## separated_nonempty_list(Tok_comma,result_column) -> result_column . [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
## separated_nonempty_list(Tok_comma,result_column) -> result_column . Tok_comma separated_nonempty_list(Tok_comma,result_column) [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## result_column
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Tok_qmark Tok_comma Tok_semicolon
##
## Ends in an error in state: 325.
##
## separated_nonempty_list(Tok_comma,result_column) -> result_column Tok_comma . separated_nonempty_list(Tok_comma,result_column) [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## result_column Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Kw_abs Tok_string
##
## Ends in an error in state: 330.
##
## column_name -> identifier . [ Tok_semicolon Tok_rparen Tok_ident Tok_eof Tok_comma Kw_zone Kw_year Kw_yaml Kw_xmltext Kw_xmldeclaration Kw_xmlconcat Kw_xmlcomment Kw_xml Kw_without Kw_within Kw_with Kw_window Kw_width Kw_where Kw_when Kw_wellformed Kw_view Kw_version Kw_varying Kw_variadic Kw_varchar Kw_varbinary Kw_var_samp Kw_var_pop Kw_values Kw_value Kw_using Kw_user Kw_use Kw_usage Kw_upsert Kw_unnest Kw_unknown Kw_union Kw_unbounded Kw_type Kw_true Kw_trim Kw_translator Kw_translate Kw_trailing Kw_to_chars Kw_to_bytes Kw_to Kw_tinyint Kw_timestampdiff Kw_timestampadd Kw_timestamp Kw_time Kw_ties Kw_then Kw_texttable Kw_textagg Kw_text Kw_tablesample Kw_table Kw_system_user Kw_system Kw_sum Kw_substring Kw_string Kw_stddev_samp Kw_stddev_pop Kw_sql_tsi_year Kw_sql_tsi_week Kw_sql_tsi_second Kw_sql_tsi_quarter Kw_sql_tsi_month Kw_sql_tsi_minute Kw_sql_tsi_hour Kw_sql_tsi_frac_second Kw_sql_tsi_day Kw_some Kw_smallint Kw_skip Kw_similar Kw_short Kw_sets Kw_set Kw_session_user Kw_serial Kw_selector Kw_select Kw_second Kw_search Kw_scope Kw_schema Kw_rows Kw_row_number Kw_row Kw_rollup Kw_role Kw_right Kw_result Kw_repository Kw_repeatable Kw_rename Kw_ref Kw_recursive Kw_real Kw_rank Kw_range Kw_raise Kw_quote Kw_querystring Kw_quarter Kw_privileges Kw_preserve Kw_precision Kw_preceding Kw_position Kw_policy Kw_percent_rank Kw_path Kw_passing Kw_partition Kw_over Kw_outer Kw_others Kw_ordinality Kw_order Kw_or Kw_only Kw_on Kw_offset Kw_octets Kw_objecttable Kw_object Kw_numeric Kw_nulls Kw_nullif Kw_null Kw_not Kw_none Kw_no Kw_next Kw_nclob Kw_nchar Kw_natural Kw_national Kw_namespace Kw_name Kw_multiset Kw_month Kw_module Kw_minute Kw_min Kw_max Kw_mask Kw_long Kw_localtimestamp Kw_localtime Kw_local Kw_listagg Kw_limit Kw_like_regex Kw_like Kw_left Kw_leading Kw_lateral Kw_last Kw_large Kw_key Kw_jsontable Kw_jsonobject Kw_jsonarray_agg Kw_json Kw_join Kw_jaas Kw_is Kw_into Kw_interval Kw_intersect Kw_integer Kw_int Kw_instead Kw_insert Kw_inner Kw_indicator Kw_index Kw_including Kw_in Kw_hour Kw_header Kw_having Kw_groups Kw_grouping Kw_group Kw_geometry Kw_geography Kw_full Kw_from Kw_format Kw_for Kw_following Kw_float Kw_first Kw_filter Kw_fetch Kw_false Kw_extract Kw_explain Kw_exists Kw_excluding Kw_exclude Kw_exception Kw_except Kw_every Kw_escape Kw_epoch Kw_end Kw_encoding Kw_enabled Kw_empty Kw_else Kw_element Kw_doy Kw_dow Kw_double Kw_domain Kw_document Kw_distinct Kw_disabled Kw_desc Kw_depth Kw_dense_rank Kw_delimiter Kw_default Kw_decimal Kw_dec Kw_day Kw_date Kw_database Kw_data Kw_cycle Kw_current_user Kw_current_transform_group_for_type Kw_current_timestamp Kw_current_time Kw_current_role Kw_current_path Kw_current_default_transform_group Kw_current_date Kw_current Kw_cume_dist Kw_cube Kw_cross Kw_count_big Kw_count Kw_corresponding Kw_convert Kw_control Kw_content Kw_condition Kw_columns Kw_collation Kw_collate Kw_code_units Kw_coalesce Kw_clob Kw_characters Kw_character Kw_char Kw_chain Kw_cast Kw_case Kw_byte Kw_by Kw_breadth Kw_both Kw_boolean Kw_blob Kw_binary Kw_biginteger Kw_bigint Kw_bigdecimal Kw_between Kw_bernoulli Kw_avg Kw_auto_increment Kw_at Kw_asc Kw_as Kw_arraytable Kw_array Kw_any Kw_and Kw_analyze Kw_all Kw_after Kw_accesspattern Kw_access Kw_abs ]
## schema_name -> identifier . [ Tok_period ]
## table_name -> identifier . [ Tok_period ]
##
## The known suffix of the stack is as follows:
## identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Tok_qmark Tok_string
##
## Ends in an error in state: 331.
##
## result_column -> expr . [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
## result_column -> expr . Kw_as identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
## result_column -> expr . identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Tok_qmark Kw_as Tok_string
##
## Ends in an error in state: 332.
##
## keyword -> Kw_as . [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
## result_column -> expr Kw_as . identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group Kw_from ]
##
## The known suffix of the stack is as follows:
## expr Kw_as
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Tok_qmark Tok_semicolon Tok_string
##
## Ends in an error in state: 341.
##
## nonempty_list(pair(statement,option(Tok_semicolon))) -> statement option(Tok_semicolon) . [ Tok_eof ]
## nonempty_list(pair(statement,option(Tok_semicolon))) -> statement option(Tok_semicolon) . nonempty_list(pair(statement,option(Tok_semicolon))) [ Tok_eof ]
##
## The known suffix of the stack is as follows:
## statement option(Tok_semicolon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Tok_string
##
## Ends in an error in state: 346.
##
## from_clause -> Kw_from . separated_nonempty_list(Tok_comma,table_or_subquery) [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## Kw_from
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Kw_current_date Kw_following Kw_following
##
## Ends in an error in state: 347.
##
## separated_nonempty_list(Tok_comma,table_or_subquery) -> table_or_subquery . [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group ]
## separated_nonempty_list(Tok_comma,table_or_subquery) -> table_or_subquery . Tok_comma separated_nonempty_list(Tok_comma,table_or_subquery) [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## table_or_subquery
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Kw_current_date Tok_comma Tok_string
##
## Ends in an error in state: 348.
##
## separated_nonempty_list(Tok_comma,table_or_subquery) -> table_or_subquery Tok_comma . separated_nonempty_list(Tok_comma,table_or_subquery) [ Tok_semicolon Tok_eof Kw_window Kw_where Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## table_or_subquery Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Kw_current_date Kw_as Tok_string
##
## Ends in an error in state: 350.
##
## keyword -> Kw_as . [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
## table_or_subquery -> table_name Kw_as . identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## table_name Kw_as
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Kw_current_date Tok_period Tok_string
##
## Ends in an error in state: 355.
##
## table_or_subquery -> schema_name Tok_period . table_name [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
## table_or_subquery -> schema_name Tok_period . table_name Kw_as identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
## table_or_subquery -> schema_name Tok_period . table_name identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## schema_name Tok_period
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Kw_current_date Tok_period Kw_current_date Tok_period
##
## Ends in an error in state: 356.
##
## table_or_subquery -> schema_name Tok_period table_name . [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
## table_or_subquery -> schema_name Tok_period table_name . Kw_as identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
## table_or_subquery -> schema_name Tok_period table_name . identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## schema_name Tok_period table_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Kw_current_date Tok_period Kw_current_date Kw_as Tok_string
##
## Ends in an error in state: 357.
##
## keyword -> Kw_as . [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
## table_or_subquery -> schema_name Tok_period table_name Kw_as . identifier [ Tok_semicolon Tok_eof Tok_comma Kw_window Kw_where Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## schema_name Tok_period table_name Kw_as
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_from Kw_current_date Tok_string
##
## Ends in an error in state: 360.
##
## schema_name -> identifier . [ Tok_period ]
## table_name -> identifier . [ Tok_semicolon Tok_ident Tok_eof Tok_comma Kw_zone Kw_year Kw_yaml Kw_xmltext Kw_xmldeclaration Kw_xmlconcat Kw_xmlcomment Kw_xml Kw_without Kw_within Kw_with Kw_window Kw_width Kw_where Kw_when Kw_wellformed Kw_view Kw_version Kw_varying Kw_variadic Kw_varchar Kw_varbinary Kw_var_samp Kw_var_pop Kw_values Kw_value Kw_using Kw_user Kw_use Kw_usage Kw_upsert Kw_unnest Kw_unknown Kw_union Kw_unbounded Kw_type Kw_true Kw_trim Kw_translator Kw_translate Kw_trailing Kw_to_chars Kw_to_bytes Kw_to Kw_tinyint Kw_timestampdiff Kw_timestampadd Kw_timestamp Kw_time Kw_ties Kw_then Kw_texttable Kw_textagg Kw_text Kw_tablesample Kw_table Kw_system_user Kw_system Kw_sum Kw_substring Kw_string Kw_stddev_samp Kw_stddev_pop Kw_sql_tsi_year Kw_sql_tsi_week Kw_sql_tsi_second Kw_sql_tsi_quarter Kw_sql_tsi_month Kw_sql_tsi_minute Kw_sql_tsi_hour Kw_sql_tsi_frac_second Kw_sql_tsi_day Kw_some Kw_smallint Kw_skip Kw_similar Kw_short Kw_sets Kw_set Kw_session_user Kw_serial Kw_selector Kw_select Kw_second Kw_search Kw_scope Kw_schema Kw_rows Kw_row_number Kw_row Kw_rollup Kw_role Kw_right Kw_result Kw_repository Kw_repeatable Kw_rename Kw_ref Kw_recursive Kw_real Kw_rank Kw_range Kw_raise Kw_quote Kw_querystring Kw_quarter Kw_privileges Kw_preserve Kw_precision Kw_preceding Kw_position Kw_policy Kw_percent_rank Kw_path Kw_passing Kw_partition Kw_over Kw_outer Kw_others Kw_ordinality Kw_order Kw_or Kw_only Kw_on Kw_offset Kw_octets Kw_objecttable Kw_object Kw_numeric Kw_nulls Kw_nullif Kw_null Kw_not Kw_none Kw_no Kw_next Kw_nclob Kw_nchar Kw_natural Kw_national Kw_namespace Kw_name Kw_multiset Kw_month Kw_module Kw_minute Kw_min Kw_max Kw_mask Kw_long Kw_localtimestamp Kw_localtime Kw_local Kw_listagg Kw_limit Kw_like_regex Kw_like Kw_left Kw_leading Kw_lateral Kw_last Kw_large Kw_key Kw_jsontable Kw_jsonobject Kw_jsonarray_agg Kw_json Kw_join Kw_jaas Kw_is Kw_into Kw_interval Kw_intersect Kw_integer Kw_int Kw_instead Kw_insert Kw_inner Kw_indicator Kw_index Kw_including Kw_in Kw_hour Kw_header Kw_having Kw_groups Kw_grouping Kw_group Kw_geometry Kw_geography Kw_full Kw_from Kw_format Kw_for Kw_following Kw_float Kw_first Kw_filter Kw_fetch Kw_false Kw_extract Kw_explain Kw_exists Kw_excluding Kw_exclude Kw_exception Kw_except Kw_every Kw_escape Kw_epoch Kw_end Kw_encoding Kw_enabled Kw_empty Kw_else Kw_element Kw_doy Kw_dow Kw_double Kw_domain Kw_document Kw_distinct Kw_disabled Kw_desc Kw_depth Kw_dense_rank Kw_delimiter Kw_default Kw_decimal Kw_dec Kw_day Kw_date Kw_database Kw_data Kw_cycle Kw_current_user Kw_current_transform_group_for_type Kw_current_timestamp Kw_current_time Kw_current_role Kw_current_path Kw_current_default_transform_group Kw_current_date Kw_current Kw_cume_dist Kw_cube Kw_cross Kw_count_big Kw_count Kw_corresponding Kw_convert Kw_control Kw_content Kw_condition Kw_columns Kw_collation Kw_collate Kw_code_units Kw_coalesce Kw_clob Kw_characters Kw_character Kw_char Kw_chain Kw_cast Kw_case Kw_byte Kw_by Kw_breadth Kw_both Kw_boolean Kw_blob Kw_binary Kw_biginteger Kw_bigint Kw_bigdecimal Kw_between Kw_bernoulli Kw_avg Kw_auto_increment Kw_at Kw_asc Kw_as Kw_arraytable Kw_array Kw_any Kw_and Kw_analyze Kw_all Kw_after Kw_accesspattern Kw_access Kw_abs ]
##
## The known suffix of the stack is as follows:
## identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_where Tok_semicolon
##
## Ends in an error in state: 363.
##
## where_clause -> Kw_where . expr [ Tok_semicolon Tok_eof Kw_window Kw_select Kw_having Kw_group ]
##
## The known suffix of the stack is as follows:
## Kw_where
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_where Tok_qmark Tok_string
##
## Ends in an error in state: 368.
##
## select_core -> select_clause option(from_clause) option(where_clause) . option(group_by_clause) option(having_clause) option(window_clause) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## select_clause option(from_clause) option(where_clause)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_group Tok_string
##
## Ends in an error in state: 369.
##
## group_by_clause -> Kw_group . Kw_by separated_nonempty_list(Tok_comma,expr) [ Tok_semicolon Tok_eof Kw_window Kw_select Kw_having ]
##
## The known suffix of the stack is as follows:
## Kw_group
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_group Kw_by Tok_semicolon
##
## Ends in an error in state: 370.
##
## group_by_clause -> Kw_group Kw_by . separated_nonempty_list(Tok_comma,expr) [ Tok_semicolon Tok_eof Kw_window Kw_select Kw_having ]
##
## The known suffix of the stack is as follows:
## Kw_group Kw_by
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_group Kw_by Tok_qmark Kw_following
##
## Ends in an error in state: 372.
##
## separated_nonempty_list(Tok_comma,expr) -> expr . [ Tok_semicolon Tok_rparen Tok_eof Kw_window Kw_select Kw_rows Kw_range Kw_order Kw_having Kw_groups ]
## separated_nonempty_list(Tok_comma,expr) -> expr . Tok_comma separated_nonempty_list(Tok_comma,expr) [ Tok_semicolon Tok_rparen Tok_eof Kw_window Kw_select Kw_rows Kw_range Kw_order Kw_having Kw_groups ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_group Kw_by Tok_qmark Tok_comma Tok_semicolon
##
## Ends in an error in state: 373.
##
## separated_nonempty_list(Tok_comma,expr) -> expr Tok_comma . separated_nonempty_list(Tok_comma,expr) [ Tok_semicolon Tok_rparen Tok_eof Kw_window Kw_select Kw_rows Kw_range Kw_order Kw_having Kw_groups ]
##
## The known suffix of the stack is as follows:
## expr Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_group Kw_by Tok_qmark Tok_rparen
##
## Ends in an error in state: 375.
##
## select_core -> select_clause option(from_clause) option(where_clause) option(group_by_clause) . option(having_clause) option(window_clause) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## select_clause option(from_clause) option(where_clause) option(group_by_clause)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 372, spurious reduction of production separated_nonempty_list(Tok_comma,expr) -> expr
## In state 371, spurious reduction of production group_by_clause -> Kw_group Kw_by separated_nonempty_list(Tok_comma,expr)
## In state 460, spurious reduction of production option(group_by_clause) -> group_by_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_having Tok_semicolon
##
## Ends in an error in state: 376.
##
## having_clause -> Kw_having . expr [ Tok_semicolon Tok_eof Kw_window Kw_select ]
##
## The known suffix of the stack is as follows:
## Kw_having
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_having Tok_qmark Tok_string
##
## Ends in an error in state: 378.
##
## select_core -> select_clause option(from_clause) option(where_clause) option(group_by_clause) option(having_clause) . option(window_clause) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## select_clause option(from_clause) option(where_clause) option(group_by_clause) option(having_clause)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Tok_string
##
## Ends in an error in state: 379.
##
## window_clause -> Kw_window . separated_nonempty_list(Tok_comma,window_clause_sublist) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## Kw_window
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_following
##
## Ends in an error in state: 381.
##
## separated_nonempty_list(Tok_comma,window_clause_sublist) -> identifier . Kw_as window_defn [ Tok_semicolon Tok_eof Kw_select ]
## separated_nonempty_list(Tok_comma,window_clause_sublist) -> identifier . Kw_as window_defn Tok_comma separated_nonempty_list(Tok_comma,window_clause_sublist) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_string
##
## Ends in an error in state: 382.
##
## separated_nonempty_list(Tok_comma,window_clause_sublist) -> identifier Kw_as . window_defn [ Tok_semicolon Tok_eof Kw_select ]
## separated_nonempty_list(Tok_comma,window_clause_sublist) -> identifier Kw_as . window_defn Tok_comma separated_nonempty_list(Tok_comma,window_clause_sublist) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier Kw_as
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Tok_string
##
## Ends in an error in state: 383.
##
## window_defn -> Tok_lparen . option(base_window_name) option(partition_clause) option(order_by_clause) option(frame_spec) Tok_rparen [ Tok_semicolon Tok_eof Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## Tok_lparen
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_following
##
## Ends in an error in state: 384.
##
## window_defn -> Tok_lparen option(base_window_name) . option(partition_clause) option(order_by_clause) option(frame_spec) Tok_rparen [ Tok_semicolon Tok_eof Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## Tok_lparen option(base_window_name)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_partition Tok_string
##
## Ends in an error in state: 385.
##
## partition_clause -> Kw_partition . Kw_by separated_nonempty_list(Tok_comma,expr) [ Tok_rparen Kw_rows Kw_range Kw_order Kw_groups ]
##
## The known suffix of the stack is as follows:
## Kw_partition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_partition Kw_by Tok_semicolon
##
## Ends in an error in state: 386.
##
## partition_clause -> Kw_partition Kw_by . separated_nonempty_list(Tok_comma,expr) [ Tok_rparen Kw_rows Kw_range Kw_order Kw_groups ]
##
## The known suffix of the stack is as follows:
## Kw_partition Kw_by
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_partition Kw_by Tok_qmark Kw_window
##
## Ends in an error in state: 389.
##
## window_defn -> Tok_lparen option(base_window_name) option(partition_clause) . option(order_by_clause) option(frame_spec) Tok_rparen [ Tok_semicolon Tok_eof Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## Tok_lparen option(base_window_name) option(partition_clause)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 372, spurious reduction of production separated_nonempty_list(Tok_comma,expr) -> expr
## In state 387, spurious reduction of production partition_clause -> Kw_partition Kw_by separated_nonempty_list(Tok_comma,expr)
## In state 388, spurious reduction of production option(partition_clause) -> partition_clause
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Tok_string
##
## Ends in an error in state: 390.
##
## order_by_clause -> Kw_order . Kw_by ordering_term [ Tok_rparen Kw_rows Kw_range Kw_groups ]
##
## The known suffix of the stack is as follows:
## Kw_order
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Kw_by Tok_semicolon
##
## Ends in an error in state: 391.
##
## order_by_clause -> Kw_order Kw_by . ordering_term [ Tok_rparen Kw_rows Kw_range Kw_groups ]
##
## The known suffix of the stack is as follows:
## Kw_order Kw_by
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Kw_by Tok_qmark Kw_following
##
## Ends in an error in state: 393.
##
## ordering_term -> expr . option(collation_name) option(order) option(null_order) [ Tok_rparen Kw_rows Kw_range Kw_groups ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Kw_by Tok_qmark Kw_collation Tok_string
##
## Ends in an error in state: 394.
##
## collation_name -> Kw_collation . identifier [ Tok_rparen Kw_rows Kw_range Kw_null Kw_groups Kw_desc Kw_asc ]
##
## The known suffix of the stack is as follows:
## Kw_collation
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Kw_by Tok_qmark Kw_collation Kw_current_date Kw_following
##
## Ends in an error in state: 396.
##
## ordering_term -> expr option(collation_name) . option(order) option(null_order) [ Tok_rparen Kw_rows Kw_range Kw_groups ]
##
## The known suffix of the stack is as follows:
## expr option(collation_name)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Kw_by Tok_qmark Kw_asc Tok_string
##
## Ends in an error in state: 399.
##
## ordering_term -> expr option(collation_name) option(order) . option(null_order) [ Tok_rparen Kw_rows Kw_range Kw_groups ]
##
## The known suffix of the stack is as follows:
## expr option(collation_name) option(order)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Kw_by Tok_qmark Kw_null Tok_string
##
## Ends in an error in state: 400.
##
## option(null_order) -> Kw_null . Kw_first [ Tok_rparen Kw_rows Kw_range Kw_groups ]
## option(null_order) -> Kw_null . Kw_last [ Tok_rparen Kw_rows Kw_range Kw_groups ]
##
## The known suffix of the stack is as follows:
## Kw_null
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_order Kw_by Tok_qmark Kw_null Kw_first Tok_string
##
## Ends in an error in state: 406.
##
## window_defn -> Tok_lparen option(base_window_name) option(partition_clause) option(order_by_clause) . option(frame_spec) Tok_rparen [ Tok_semicolon Tok_eof Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## Tok_lparen option(base_window_name) option(partition_clause) option(order_by_clause)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_rows Tok_semicolon
##
## Ends in an error in state: 407.
##
## frame_spec -> Kw_rows . frame_spec_core option(frame_spec_excluding) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_rows
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_unbounded Tok_string
##
## Ends in an error in state: 408.
##
## frame_spec_core -> Kw_unbounded . Kw_preceding [ Tok_rparen Kw_exclude ]
## keyword -> Kw_unbounded . [ Tok_period Kw_preceding ]
##
## The known suffix of the stack is as follows:
## Kw_unbounded
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_current Tok_string
##
## Ends in an error in state: 410.
##
## frame_spec_core -> Kw_current . Kw_row [ Tok_rparen Kw_exclude ]
## keyword -> Kw_current . [ Tok_period Kw_preceding ]
##
## The known suffix of the stack is as follows:
## Kw_current
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Tok_semicolon
##
## Ends in an error in state: 412.
##
## frame_spec_between -> Kw_between . frame_spec_between_1 Kw_and frame_spec_between_2 [ Tok_rparen Kw_exclude ]
## keyword -> Kw_between . [ Tok_period Kw_preceding ]
##
## The known suffix of the stack is as follows:
## Kw_between
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Kw_unbounded Tok_string
##
## Ends in an error in state: 413.
##
## frame_spec_between_1 -> Kw_unbounded . Kw_preceding [ Kw_and ]
## keyword -> Kw_unbounded . [ Tok_period Kw_preceding Kw_following ]
##
## The known suffix of the stack is as follows:
## Kw_unbounded
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Kw_current Tok_string
##
## Ends in an error in state: 415.
##
## frame_spec_between_1 -> Kw_current . Kw_row [ Kw_and ]
## keyword -> Kw_current . [ Tok_period Kw_preceding Kw_following ]
##
## The known suffix of the stack is as follows:
## Kw_current
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Tok_qmark Kw_following Tok_string
##
## Ends in an error in state: 417.
##
## frame_spec_between -> Kw_between frame_spec_between_1 . Kw_and frame_spec_between_2 [ Tok_rparen Kw_exclude ]
##
## The known suffix of the stack is as follows:
## Kw_between frame_spec_between_1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Tok_qmark Kw_following Kw_and Tok_semicolon
##
## Ends in an error in state: 418.
##
## frame_spec_between -> Kw_between frame_spec_between_1 Kw_and . frame_spec_between_2 [ Tok_rparen Kw_exclude ]
##
## The known suffix of the stack is as follows:
## Kw_between frame_spec_between_1 Kw_and
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Tok_qmark Kw_following Kw_and Kw_unbounded Tok_string
##
## Ends in an error in state: 419.
##
## frame_spec_between_2 -> Kw_unbounded . Kw_following [ Tok_rparen Kw_exclude ]
## keyword -> Kw_unbounded . [ Tok_period Kw_preceding Kw_following ]
##
## The known suffix of the stack is as follows:
## Kw_unbounded
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Tok_qmark Kw_following Kw_and Kw_current Tok_string
##
## Ends in an error in state: 421.
##
## frame_spec_between_2 -> Kw_current . Kw_row [ Tok_rparen Kw_exclude ]
## keyword -> Kw_current . [ Tok_period Kw_preceding Kw_following ]
##
## The known suffix of the stack is as follows:
## Kw_current
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Tok_qmark Kw_following Kw_and Tok_qmark Tok_string
##
## Ends in an error in state: 424.
##
## frame_spec_between_2 -> expr . Kw_preceding [ Tok_rparen Kw_exclude ]
## frame_spec_between_2 -> expr . Kw_following [ Tok_rparen Kw_exclude ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Kw_between Tok_qmark Tok_string
##
## Ends in an error in state: 427.
##
## frame_spec_between_1 -> expr . Kw_preceding [ Kw_and ]
## frame_spec_between_1 -> expr . Kw_following [ Kw_and ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_rows Tok_qmark Kw_preceding Tok_string
##
## Ends in an error in state: 430.
##
## frame_spec -> Kw_rows frame_spec_core . option(frame_spec_excluding) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_rows frame_spec_core
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Tok_qmark Kw_preceding Kw_exclude Tok_string
##
## Ends in an error in state: 431.
##
## frame_spec_excluding -> Kw_exclude . Kw_group [ Tok_rparen ]
## frame_spec_excluding -> Kw_exclude . Kw_ties [ Tok_rparen ]
## frame_spec_excluding -> Kw_exclude . Kw_no Kw_others [ Tok_rparen ]
## frame_spec_excluding -> Kw_exclude . Kw_current Kw_row [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_exclude
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Tok_qmark Kw_preceding Kw_exclude Kw_no Tok_string
##
## Ends in an error in state: 433.
##
## frame_spec_excluding -> Kw_exclude Kw_no . Kw_others [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_exclude Kw_no
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Tok_qmark Kw_preceding Kw_exclude Kw_current Tok_string
##
## Ends in an error in state: 436.
##
## frame_spec_excluding -> Kw_exclude Kw_current . Kw_row [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_exclude Kw_current
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Tok_qmark Kw_following
##
## Ends in an error in state: 441.
##
## frame_spec_core -> expr . Kw_preceding [ Tok_rparen Kw_exclude ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_range Tok_semicolon
##
## Ends in an error in state: 443.
##
## frame_spec -> Kw_range . frame_spec_core option(frame_spec_excluding) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_range
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_range Tok_qmark Kw_preceding Tok_string
##
## Ends in an error in state: 444.
##
## frame_spec -> Kw_range frame_spec_core . option(frame_spec_excluding) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_range frame_spec_core
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Tok_semicolon
##
## Ends in an error in state: 446.
##
## frame_spec -> Kw_groups . frame_spec_core option(frame_spec_excluding) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_groups
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Tok_qmark Kw_preceding Tok_string
##
## Ends in an error in state: 447.
##
## frame_spec -> Kw_groups frame_spec_core . option(frame_spec_excluding) [ Tok_rparen ]
##
## The known suffix of the stack is as follows:
## Kw_groups frame_spec_core
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Kw_current_date Kw_groups Tok_qmark Kw_preceding Kw_exclude Kw_group Tok_string
##
## Ends in an error in state: 449.
##
## window_defn -> Tok_lparen option(base_window_name) option(partition_clause) option(order_by_clause) option(frame_spec) . Tok_rparen [ Tok_semicolon Tok_eof Tok_comma Kw_select ]
##
## The known suffix of the stack is as follows:
## Tok_lparen option(base_window_name) option(partition_clause) option(order_by_clause) option(frame_spec)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Tok_rparen Tok_string
##
## Ends in an error in state: 454.
##
## separated_nonempty_list(Tok_comma,window_clause_sublist) -> identifier Kw_as window_defn . [ Tok_semicolon Tok_eof Kw_select ]
## separated_nonempty_list(Tok_comma,window_clause_sublist) -> identifier Kw_as window_defn . Tok_comma separated_nonempty_list(Tok_comma,window_clause_sublist) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier Kw_as window_defn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

statements: Kw_select Op_star Kw_window Kw_current_date Kw_as Tok_lparen Tok_rparen Tok_comma Tok_string
##
## Ends in an error in state: 455.
##
## separated_nonempty_list(Tok_comma,window_clause_sublist) -> identifier Kw_as window_defn Tok_comma . separated_nonempty_list(Tok_comma,window_clause_sublist) [ Tok_semicolon Tok_eof Kw_select ]
##
## The known suffix of the stack is as follows:
## identifier Kw_as window_defn Tok_comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

